{"remainingRequest":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\babel-loader\\lib\\index.js!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\components\\diagrams\\Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\components\\diagrams\\Chart.vue","mtime":1586793776000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnZhbHVlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmltcG9ydCB7IHNjYWxlTGluZWFyLCBzY2FsZUJhbmQgfSBmcm9tICJkMy1zY2FsZSI7CmltcG9ydCB7IG1heCwgbWluIH0gZnJvbSAiZDMtYXJyYXkiOwppbXBvcnQgeyBzZWxlY3RBbGwgfSBmcm9tICJkMy1zZWxlY3Rpb24iOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRlc3QtQ2hhcnQiLAogIHByb3BzOiB7CiAgICBkYXRhOiBPYmplY3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0ZXN0ZGF0YTogewogICAgICAgICJBTSI6IDUwMDAwMCwKICAgICAgICAiUE0iOiA0MDAwMDAKICAgICAgfSwKICAgICAgaWQ6IDUwMDAsCiAgICAgIGhlaWdodDogNjAwLAogICAgICBzdmdIZWlnaHQ6IDAsCiAgICAgIHN2Z1dpZHRoOiAwLAogICAgICB3aWR0aDogNjAwLAogICAgICBtYXJnaW46IHsKICAgICAgICB0b3A6IDMwLAogICAgICAgIHJpZ2h0OiAzMCwKICAgICAgICBib3R0b206IDMwLAogICAgICAgIGxlZnQ6IDcwCiAgICAgIH0sCiAgICAgIG1hcmdpbl90b3A6IDIwLAogICAgICBtYXJnaW5fbGVmdDogNTAsCiAgICAgIGtleXM6IFtdLAogICAgICB2YWx1ZXM6IFtdLAogICAgICB4MDogT2JqZWN0LAogICAgICB5OiBPYmplY3QsCiAgICAgIGNvbG9yOiBPYmplY3QsCiAgICAgIHN2ZzogT2JqZWN0LAogICAgICBjb250YWluZXI6IE9iamVjdCwKICAgICAgeEF4aXM6IE9iamVjdCwKICAgICAgeUF4aXM6IE9iamVjdCwKICAgICAgYmFyczogT2JqZWN0CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXQoKTsKICAgIHRoaXMuZHJhdygpOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKCJjcmVhdGVkIik7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICB0aGlzLnN2ZyA9IGQzLnNlbGVjdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmlkKSk7CiAgICAgIHRoaXMud2lkdGhTVkcgPSB0aGlzLndpZHRoIC0gdGhpcy5tYXJnaW4ubGVmdCAtIHRoaXMubWFyZ2luLnJpZ2h0OwogICAgICB0aGlzLnN2Z0hlaWdodCA9IHRoaXMuaGVpZ2h0IC0gdGhpcy5tYXJnaW4udG9wIC0gdGhpcy5tYXJnaW4uYm90dG9tOwogICAgICB0aGlzLmtleXMgPSBPYmplY3Qua2V5cyh0aGlzLnRlc3RkYXRhKTsKICAgICAgdGhpcy52YWx1ZXMgPSBPYmplY3QudmFsdWVzKHRoaXMudGVzdGRhdGEpOwogICAgICB0aGlzLngwID0gZDMuc2NhbGVCYW5kKCkucmFuZ2UoWzAsIHRoaXMud2lkdGhTVkddKS5wYWRkaW5nKDAuMSk7CiAgICAgIHRoaXMueDAuZG9tYWluKHRoaXMua2V5cyk7CiAgICAgIGNvbnNvbGUubG9nKGQzLm1heCh0aGlzLnZhbHVlcykpOwogICAgICB0aGlzLnkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgZDMubWF4KHRoaXMudmFsdWVzKV0pLm5pY2UoKS5yYW5nZVJvdW5kKFt0aGlzLnN2Z0hlaWdodCwgMF0pOwogICAgICB0aGlzLmNvbG9yID0gZDMuc2NhbGVPcmRpbmFsKGQzLnNjaGVtZUNhdGVnb3J5MTApOwogICAgfSwKICAgIGRyYXc6IGZ1bmN0aW9uIGRyYXcoKSB7CiAgICAgIGNvbnNvbGUubG9nKCJTdGFydCBkcmF3aW5nIik7CiAgICAgIHRoaXMuc3ZnLmF0dHIoInZpZXdCb3giLCAiMCAwICIgKyB0aGlzLndpZHRoICsgIiAiICsgdGhpcy5oZWlnaHQpOwogICAgICB0aGlzLmNvbnRhaW5lciA9IHRoaXMuc3ZnLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwgInN2Z2NvbnRhaW5lciIpLmF0dHIoImlkIiwgImMiKS5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIgKyB0aGlzLm1hcmdpbl9sZWZ0ICsgIiwiICsgdGhpcy5tYXJnaW5fdG9wICsgIikiKTsKICAgICAgdGhpcy54QXhpcyA9IHRoaXMuY29udGFpbmVyLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwgImF4aXMiKS5hdHRyKCJpZCIsICJ4QXhpcyIpLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMCwiICsgdGhpcy5zdmdIZWlnaHQgKyAiKSIpLmNhbGwoZDMuYXhpc0JvdHRvbSh0aGlzLngwKSk7CiAgICAgIHRoaXMueUF4aXMgPSB0aGlzLmNvbnRhaW5lci5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJ5QXhpcyIpLmF0dHIoImNsYXNzIiwgImF4aXMiKS5jYWxsKGQzLmF4aXNMZWZ0KHRoaXMueSkpLmFwcGVuZCgidGV4dCIpLmF0dHIoIngiLCAyKS5hdHRyKCJ5IiwgdGhpcy55KHRoaXMueS50aWNrcygpLnBvcCgpKSArIDAuNSkuYXR0cigiZHkiLCAiMC4zMmVtIikuYXR0cigiZmlsbCIsICIjMDAwIikuYXR0cigiZm9udC13ZWlnaHQiLCAiYm9sZCIpLmF0dHIoInRleHQtYW5jaG9yIiwgInN0YXJ0IikudGV4dCgiayIpOwogICAgICB0aGlzLmJhcnMgPSB0aGlzLmNvbnRhaW5lci5zZWxlY3RBbGwoIi5iYXIiKS5kYXRhKHRoaXMudmFsdWVzKS5lbnRlcigpLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwgImJhciIpOwogICAgICB2YXIgeDAgPSB0aGlzLngwOwogICAgICB2YXIgeSA9IHRoaXMueTsKICAgICAgdmFyIGtleXMgPSB0aGlzLmtleXM7CiAgICAgIHZhciBzdmdIZWlnaHQgPSB0aGlzLnN2Z0hlaWdodDsKICAgICAgdmFyIGNvbG9yID0gdGhpcy5jb2xvcjsKICAgICAgdGhpcy5iYXJzLmFwcGVuZCgicmVjdCIpLmF0dHIoIngiLCBmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIHJldHVybiB4MChrZXlzW2ldKTsKICAgICAgfSkuYXR0cigieSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHkoZCk7CiAgICAgIH0pLmF0dHIoIndpZHRoIiwgeDAuYmFuZHdpZHRoKCkpLmF0dHIoImhlaWdodCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHN2Z0hlaWdodCAtIHkoZCk7CiAgICAgIH0pLmF0dHIoJ2ZpbGwnLCBmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIHJldHVybiBjb2xvcihpKTsKICAgICAgfSk7IC8vRGllIExhYmVscyDDvGJlciBkZW4gQmFsa2VuIGVyc3RlbGxlbgoKICAgICAgdGhpcy5iYXJzLmFwcGVuZCgidGV4dCIpLnRleHQoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZDMuZm9ybWF0KCIsIikoZCk7CiAgICAgIH0pLmF0dHIoIngiLCBmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIHJldHVybiB4MChrZXlzW2ldKSArIHgwLmJhbmR3aWR0aCgpIC8gMjsKICAgICAgfSkuYXR0cigieSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHkoZCkgLSA1OwogICAgICB9KS5hdHRyKCJ0ZXh0LWFuY2hvciIsICJtaWRkbGUiKTsKICAgIH0sCiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9CiAgfQp9Ow=="},{"version":3,"sources":["Chart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <h1>Bar-Chart</h1>\n        <svg class=\"barchart\"  :id=\"id\">\n        </svg>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { scaleLinear, scaleBand } from \"d3-scale\";\nimport { max, min } from \"d3-array\";\nimport { selectAll } from \"d3-selection\";\n\nexport default {\n    name: \"Test-Chart\",\n    props: {\n        data : Object,\n    },\n    data() {\n        return{\n            testdata: {\n                \"AM\" : 500000,\n                \"PM\" :400000,\n            },\n            id: 5000,\n            height: 600,\n            svgHeight: 0,\n            svgWidth: 0,\n            width: 600,\n            margin: {top: 30, right: 30, bottom: 30, left: 70},\n            margin_top : 20,\n            margin_left: 50,\n            keys : [],\n            values: [],\n            x0: Object,\n            y: Object,\n            color: Object,\n            svg: Object,\n            container: Object,\n            xAxis: Object,\n            yAxis: Object,\n            bars: Object\n        }\n    },\n    computed: {\n    },\n    mounted(){\n        this.init();\n        this.draw();\n    },\n    created(){\n        console.log(\"created\")\n    },\n    methods: {\n        init(){\n            this.svg = d3.select(document.getElementById(this.id));\n\n            this.widthSVG = this.width - this.margin.left - this.margin.right;\n            this.svgHeight = this.height - this.margin.top - this.margin.bottom;\n\n            this.keys = Object.keys(this.testdata);\n            this.values = Object.values(this.testdata);\n\n            this.x0 = d3.scaleBand().range([0, this.widthSVG]).padding(0.1);\n            this.x0.domain(this.keys);\n            console.log(d3.max(this.values));\n\n            this.y = d3.scaleLinear().domain([0, d3.max(this.values)]).nice().rangeRound([this.svgHeight, 0]);\n\n            this.color = d3.scaleOrdinal(d3.schemeCategory10);\n        },\n        draw(){\n            console.log(\"Start drawing\")\n            this.svg.attr(\"viewBox\", \"0 0 \" + this.width + \" \" + this.height);\n\n            this.container = this.svg.append(\"g\")\n                                    .attr(\"class\", \"svgcontainer\")\n                                    .attr(\"id\", \"c\")\n                                    .attr(\"transform\", \"translate(\" + this.margin_left + \",\" + this.margin_top + \")\");\n\n            this.xAxis = this.container.append(\"g\")\n                                    .attr(\"class\", \"axis\")\n                                    .attr(\"id\", \"xAxis\")\n                                    .attr(\"transform\", \"translate(0,\" + this.svgHeight + \")\")\n                                    .call(d3.axisBottom(this.x0));\n\n            this.yAxis = this.container.append(\"g\")\n                                        .attr(\"id\", \"yAxis\")\n                                        .attr(\"class\", \"axis\")\n                                        .call(d3.axisLeft(this.y))\n                                        .append(\"text\")\n                                        .attr(\"x\", 2)\n                                        .attr(\"y\", this.y(this.y.ticks().pop()) + 0.5)\n                                        .attr(\"dy\", \"0.32em\")\n                                        .attr(\"fill\", \"#000\")\n                                        .attr(\"font-weight\", \"bold\")\n                                        .attr(\"text-anchor\", \"start\")\n                                        .text(\"k\");\n            \n            this.bars = this.container.selectAll(\".bar\").data(this.values).enter()\n                .append(\"g\").attr(\"class\", \"bar\");\n            \n            let x0 = this.x0;\n            let y = this.y;\n            let keys = this.keys;\n            let svgHeight = this.svgHeight;\n            let color = this.color;\n\n            this.bars.append(\"rect\")\n                .attr(\"x\", function(d,i) { \n                    return x0(keys[i]); })\n                .attr(\"y\", function(d) { return y(d); })\n                .attr(\"width\", x0.bandwidth())\n                .attr(\"height\", function(d) { \n                    return svgHeight - y(d); })\n                .attr('fill',function(d,i){\n                    return color(i);\n                });\n\n            //Die Labels über den Balken erstellen\n            this.bars.append(\"text\").text(function(d){ return d3.format(\",\")(d)})\n                .attr(\"x\", function(d,i) { return x0(keys[i])+x0.bandwidth()/2; })\n                .attr(\"y\", function(d) { return y(d)-5; })\n                .attr(\"text-anchor\", \"middle\");\n\n        },\n        update(){\n\n        }\n    }\n}\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/components/diagrams"}]}