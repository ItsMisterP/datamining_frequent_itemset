{"remainingRequest":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/babel-loader/lib/index.js!/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/src/components/diagrams/MultiLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/src/components/diagrams/MultiLineChart.vue","mtime":1588499118168},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKaW1wb3J0IHsgc2NhbGVMaW5lYXIsIHNjYWxlQmFuZCB9IGZyb20gImQzLXNjYWxlIjsKaW1wb3J0IHsgbWF4LCBtaW4gfSBmcm9tICJkMy1hcnJheSI7CmltcG9ydCB7IHNlbGVjdEFsbCB9IGZyb20gImQzLXNlbGVjdGlvbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGVzdC1DaGFydCIsCiAgcHJvcHM6IHsKICAgIGRhdGE6IE9iamVjdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRlc3RkYXRhOiB7CiAgICAgICAgUExBOiB7CiAgICAgICAgICBBOiAxLAogICAgICAgICAgQjogMgogICAgICAgIH0sCiAgICAgICAgUEJTOiB7CiAgICAgICAgICBBOiAxLAogICAgICAgICAgQjogNAogICAgICAgIH0KICAgICAgfSwKICAgICAgaWQ6IDkwMDAsCiAgICAgIGhlaWdodDogNjAwLAogICAgICBoZWlnaHRTVkc6IDAsCiAgICAgIHdpZHRoU1ZHOiAwLAogICAgICB3aWR0aDogNjAwLAogICAgICBtYXJnaW46IHsKICAgICAgICB0b3A6IDMwLAogICAgICAgIHJpZ2h0OiAzMCwKICAgICAgICBib3R0b206IDMwLAogICAgICAgIGxlZnQ6IDcwCiAgICAgIH0sCiAgICAgIG1hcmdpbl90b3A6IDIwLAogICAgICBtYXJnaW5fbGVmdDogNTAsCiAgICAgIGtleXNYMDogW10sCiAgICAgIGtleXNYMTogW10sCiAgICAgIHZhbHVlczogW10sCiAgICAgIG1heFgxOiAwLAogICAgICB4MDogT2JqZWN0LAogICAgICB4MTogT2JqZWN0LAogICAgICB5OiBPYmplY3QsCiAgICAgIGNvbG9yOiBPYmplY3QsCiAgICAgIHN2ZzogT2JqZWN0LAogICAgICBjb250YWluZXI6IE9iamVjdCwKICAgICAgeEF4aXM6IE9iamVjdCwKICAgICAgeUF4aXM6IE9iamVjdCwKICAgICAgZ3JvdXBzOiBPYmplY3QsCiAgICAgIGxpbmVzOiBPYmplY3QsCiAgICAgIHBvaW50czogT2JqZWN0CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmluaXQoKTsKICAgIHRoaXMuZHJhdygpOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHt9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHRoaXMuc3ZnID0gZDMuc2VsZWN0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuaWQpKTsKICAgICAgdGhpcy5zdmcuYXR0cigicHJlc2VydmVBc3BlY3RSYXRpbyIsICJ4TWluWU1pbiBtZWV0IikuYXR0cigidmlld0JveCIsICIwIDAgIiArIHRoaXMud2lkdGggKyAiICIgKyB0aGlzLmhlaWdodCk7CiAgICAgIHRoaXMud2lkdGhTVkcgPSB0aGlzLndpZHRoIC0gdGhpcy5tYXJnaW4ubGVmdCAtIHRoaXMubWFyZ2luLnJpZ2h0OwogICAgICB0aGlzLmhlaWdodFNWRyA9IHRoaXMuaGVpZ2h0IC0gdGhpcy5tYXJnaW4udG9wIC0gdGhpcy5tYXJnaW4uYm90dG9tOwogICAgICB0aGlzLmtleXNYMCA9IE9iamVjdC5rZXlzKHRoaXMudGVzdGRhdGEpOwogICAgICB0aGlzLnZhbHVlcyA9IE9iamVjdC52YWx1ZXModGhpcy50ZXN0ZGF0YSk7CiAgICAgIHRoaXMua2V5c1gxID0gT2JqZWN0LmtleXModGhpcy52YWx1ZXNbMF0pOwogICAgICB0aGlzLmNvbG9yID0gZDMuc2NhbGVPcmRpbmFsKGQzLnNjaGVtZUNhdGVnb3J5MTApOwogICAgICB0aGlzLm1heFgxID0gdGhpcy5maW5kTWF4KHRoaXMudmFsdWVzLCB0aGlzLmtleXNYMSk7CiAgICAgIHRoaXMueDAgPSBkMy5zY2FsZUJhbmQoKS5yYW5nZShbMCwgdGhpcy53aWR0aFNWR10pLnBhZGRpbmcoMC4xKTsKICAgICAgdGhpcy54MC5kb21haW4odGhpcy5rZXlzWDEpOwogICAgICB0aGlzLnkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgdGhpcy5tYXhYMV0pLm5pY2UoKS5yYW5nZVJvdW5kKFt0aGlzLmhlaWdodFNWRywgMF0pOwogICAgICB0aGlzLmdlbmVyYXRvciA9IGQzLmxpbmUoKS54KGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgcmV0dXJuIHgwKHRoaXMua2V5c1gwW2ldKSArIHgwLmJhbmR3aWR0aCgpIC8gMjsKICAgICAgfSkueShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiB5KGQpOwogICAgICB9KTsKICAgIH0sCiAgICBkcmF3OiBmdW5jdGlvbiBkcmF3KCkgewogICAgICB0aGlzLmNvbnRhaW5lciA9IHRoaXMuc3ZnLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwgInN2Z2NvbnRhaW5lciIpLmF0dHIoImlkIiwgImNvbnRhaW5lcmlkIikuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgdGhpcy5tYXJnaW4ubGVmdCArICIsIiArIHRoaXMubWFyZ2luLnRvcCArICIpIik7CiAgICAgIHRoaXMueEF4aXMgPSB0aGlzLmNvbnRhaW5lci5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsICJheGlzIikuYXR0cigiaWQiLCAieEF4aXMiKS5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKDAsIiArIHRoaXMuaGVpZ2h0U1ZHICsgIikiKS5jYWxsKGQzLmF4aXNCb3R0b20odGhpcy54MCkpOwogICAgICB0aGlzLnlBeGlzID0gdGhpcy5jb250YWluZXIuYXBwZW5kKCJnIikuYXR0cigiaWQiLCAieUF4aXMiKS5hdHRyKCJjbGFzcyIsICJheGlzIikuY2FsbChkMy5heGlzTGVmdCh0aGlzLnkpKS5hcHBlbmQoInRleHQiKS5hdHRyKCJ4IiwgMikuYXR0cigieSIsIHRoaXMueSh0aGlzLnkudGlja3MoKS5wb3AoKSkgKyAwLjUpLmF0dHIoImR5IiwgIjAuMzJlbSIpLmF0dHIoImZpbGwiLCAiIzAwMCIpLmF0dHIoImZvbnQtd2VpZ2h0IiwgImJvbGQiKS5hdHRyKCJ0ZXh0LWFuY2hvciIsICJzdGFydCIpLnRleHQoImsiKTsKICAgICAgdmFyIHgwID0gdGhpcy54MDsKICAgICAgdmFyIHgxID0gdGhpcy54MTsKICAgICAgdmFyIHZhbHVlcyA9IHRoaXMudmFsdWVzOwogICAgICB2YXIgeSA9IHRoaXMueTsKICAgICAgdmFyIGtleXNYMCA9IHRoaXMua2V5c1gwOwogICAgICB2YXIga2V5c1gxID0gdGhpcy5rZXlzWDE7CiAgICAgIHZhciBoZWlnaHRTVkcgPSB0aGlzLmhlaWdodFNWRzsKICAgICAgdmFyIHdpZHRoU1ZHID0gdGhpcy53aWR0aFNWRzsKICAgICAgdmFyIG1hcmdpbiA9IHRoaXMubWFyZ2luOwogICAgICB2YXIgY29sb3IgPSB0aGlzLmNvbG9yOwogICAgICB2YXIgZ2VuZXJhdG9yID0gZDMubGluZSgpLngoZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICByZXR1cm4geDAoa2V5c1gxW2ldKSArIHgwLmJhbmR3aWR0aCgpIC8gMjsKICAgICAgfSkueShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiB5KGQpOwogICAgICB9KTsKICAgICAgdGhpcy5ncm91cHMgPSB0aGlzLmNvbnRhaW5lci5zZWxlY3RBbGwoIi5saW5lLWdyb3VwIikuZGF0YShrZXlzWDEpLmVudGVyKCkuYXBwZW5kKCJnIikuYXR0cigiZmlsbCIsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgcmV0dXJuIGNvbG9yKGkpOwogICAgICB9KS5hdHRyKCJjbGFzcyIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuICJsaW5lLWdyb3VwICIgKyBkOwogICAgICB9KTsKICAgICAgdGhpcy5saW5lcyA9IHRoaXMuZ3JvdXBzLmFwcGVuZCgicGF0aCIpLmF0dHIoInN0cm9rZSIsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgcmV0dXJuIGNvbG9yKGkpOwogICAgICB9KS5kYXR1bShmdW5jdGlvbiAoZCkgewogICAgICAgIHZhciBkYXQgPSBbXTsKCiAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCBrZXlzWDAubGVuZ3RoOyBrKyspIHsKICAgICAgICAgIGRhdC5wdXNoKHZhbHVlc1trXVtkXSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gZGF0OwogICAgICB9KS5hdHRyKCJjbGFzcyIsICJsaW5lIEdsb2JhbCIpLmF0dHIoImQiLCBnZW5lcmF0b3IpLmF0dHIoImZpbGwiLCAibm9uZSIpOwogICAgICB0aGlzLnBvaW50cyA9IHRoaXMuZ3JvdXBzLnNlbGVjdEFsbCgiLmRvdCIpLmRhdGEoZnVuY3Rpb24gKGQpIHsKICAgICAgICB2YXIgZGF0ID0gW107CgogICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwga2V5c1gxLmxlbmd0aDsgaysrKSB7CiAgICAgICAgICBkYXQucHVzaCh2YWx1ZXNba11bZF0pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGRhdDsKICAgICAgfSkuZW50ZXIoKS5hcHBlbmQoImNpcmNsZSIpIC8vIFVzZXMgdGhlIGVudGVyKCkuYXBwZW5kKCkgbWV0aG9kCiAgICAgIC5hdHRyKCJjbGFzcyIsICJkb3QiKSAvLyBBc3NpZ24gYSBjbGFzcyBmb3Igc3R5bGluZwogICAgICAuYXR0cigiY3giLCBmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIHJldHVybiB4MChrZXlzWDFbaV0pICsgeDAuYmFuZHdpZHRoKCkgLyAyOwogICAgICB9KS5hdHRyKCJjeSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHkoZCk7CiAgICAgIH0pLmF0dHIoInIiLCAzKTsKICAgIH0sCiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LAogICAgY3JlYXRlWDFLZXlzOiBmdW5jdGlvbiBjcmVhdGVYMUtleXModmFsdWVzKSB7CiAgICAgIHZhciBhcnIgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgaW4gdmFsdWUpIHsKICAgICAgICBmb3IgKHZhciBqIGluIHZhbHVlW2ldKSB7CiAgICAgICAgICBpZiAoIWFyci5pbmNsdWRlcyhqKSkgewogICAgICAgICAgICBhcnIucHVzaChqKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBhcnI7CiAgICB9LAogICAgZmluZE1heDogZnVuY3Rpb24gZmluZE1heCh2YWx1ZXMsIGtleXNYMSkgewogICAgICB2YXIgbWF4ID0gMDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFsdWVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBrZXlzWDEubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIHZhciB0bXAgPSB2YWx1ZXNbaV07CiAgICAgICAgICBpZiAocGFyc2VGbG9hdCh0bXBba2V5c1gxW2pdXSkgPiBwYXJzZUZsb2F0KG1heCkpIG1heCA9IHRtcFtrZXlzWDFbal1dOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIG1heDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["MultiLineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;AASA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,SAAA,WAAA,EAAA,SAAA,QAAA,UAAA;AACA,SAAA,GAAA,EAAA,GAAA,QAAA,UAAA;AACA,SAAA,SAAA,QAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,GAAA,EAAA;AACA,UAAA,CAAA,EAAA,CADA;AAEA,UAAA,CAAA,EAAA;AAFA,SADA;AAKA,QAAA,GAAA,EAAA;AACA,UAAA,CAAA,EAAA,CADA;AAEA,UAAA,CAAA,EAAA;AAFA;AALA,OADA;AAWA,MAAA,EAAA,EAAA,IAXA;AAYA,MAAA,MAAA,EAAA,GAZA;AAaA,MAAA,SAAA,EAAA,CAbA;AAcA,MAAA,QAAA,EAAA,CAdA;AAeA,MAAA,KAAA,EAAA,GAfA;AAgBA,MAAA,MAAA,EAAA;AAAA,QAAA,GAAA,EAAA,EAAA;AAAA,QAAA,KAAA,EAAA,EAAA;AAAA,QAAA,MAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAhBA;AAiBA,MAAA,UAAA,EAAA,EAjBA;AAkBA,MAAA,WAAA,EAAA,EAlBA;AAmBA,MAAA,MAAA,EAAA,EAnBA;AAoBA,MAAA,MAAA,EAAA,EApBA;AAqBA,MAAA,MAAA,EAAA,EArBA;AAsBA,MAAA,KAAA,EAAA,CAtBA;AAuBA,MAAA,EAAA,EAAA,MAvBA;AAwBA,MAAA,EAAA,EAAA,MAxBA;AAyBA,MAAA,CAAA,EAAA,MAzBA;AA0BA,MAAA,KAAA,EAAA,MA1BA;AA2BA,MAAA,GAAA,EAAA,MA3BA;AA4BA,MAAA,SAAA,EAAA,MA5BA;AA6BA,MAAA,KAAA,EAAA,MA7BA;AA8BA,MAAA,KAAA,EAAA,MA9BA;AA+BA,MAAA,MAAA,EAAA,MA/BA;AAgCA,MAAA,KAAA,EAAA,MAhCA;AAiCA,MAAA,MAAA,EAAA;AAjCA,KAAA;AAmCA,GAzCA;AA0CA,EAAA,QAAA,EAAA,EA1CA;AA2CA,EAAA,OA3CA,qBA2CA;AACA,SAAA,IAAA;AACA,SAAA,IAAA;AACA,GA9CA;AA+CA,EAAA,OA/CA,qBA+CA,CACA,CAhDA;AAiDA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,WAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,QAAA,CAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AACA,WAAA,GAAA,CACA,IADA,CACA,qBADA,EACA,eADA,EAEA,IAFA,CAEA,SAFA,EAEA,SAAA,KAAA,KAAA,GAAA,GAAA,GAAA,KAAA,MAFA;AAIA,WAAA,QAAA,GAAA,KAAA,KAAA,GAAA,KAAA,MAAA,CAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA;AACA,WAAA,SAAA,GAAA,KAAA,MAAA,GAAA,KAAA,MAAA,CAAA,GAAA,GAAA,KAAA,MAAA,CAAA,MAAA;AAEA,WAAA,MAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,QAAA,CAAA;AACA,WAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CAAA,KAAA,QAAA,CAAA;AACA,WAAA,MAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAEA,WAAA,KAAA,GAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,gBAAA,CAAA;AAEA,WAAA,KAAA,GAAA,KAAA,OAAA,CAAA,KAAA,MAAA,EAAA,KAAA,MAAA,CAAA;AAEA,WAAA,EAAA,GAAA,EAAA,CACA,SADA,GAEA,KAFA,CAEA,CAAA,CAAA,EAAA,KAAA,QAAA,CAFA,EAGA,OAHA,CAGA,GAHA,CAAA;AAIA,WAAA,EAAA,CAAA,MAAA,CAAA,KAAA,MAAA;AAEA,WAAA,CAAA,GAAA,EAAA,CACA,WADA,GAEA,MAFA,CAEA,CAAA,CAAA,EAAA,KAAA,KAAA,CAFA,EAGA,IAHA,GAIA,UAJA,CAIA,CAAA,KAAA,SAAA,EAAA,CAAA,CAJA,CAAA;AAMA,WAAA,SAAA,GAAA,EAAA,CACA,IADA,GAEA,CAFA,CAEA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,eAAA,EAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,SAAA,KAAA,CAAA;AACA,OAJA,EAKA,CALA,CAKA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAPA,CAAA;AAQA,KAtCA;AAuCA,IAAA,IAvCA,kBAuCA;AACA,WAAA,SAAA,GAAA,KAAA,GAAA,CACA,MADA,CACA,GADA,EAEA,IAFA,CAEA,OAFA,EAEA,cAFA,EAGA,IAHA,CAGA,IAHA,EAGA,aAHA,EAIA,IAJA,CAKA,WALA,EAMA,eACA,KAAA,MAAA,CAAA,IADA,GAEA,GAFA,GAGA,KAAA,MAAA,CAAA,GAHA,GAIA,GAVA,CAAA;AAaA,WAAA,KAAA,GAAA,KAAA,SAAA,CACA,MADA,CACA,GADA,EAEA,IAFA,CAEA,OAFA,EAEA,MAFA,EAGA,IAHA,CAGA,IAHA,EAGA,OAHA,EAIA,IAJA,CAIA,WAJA,EAIA,iBAAA,KAAA,SAAA,GAAA,GAJA,EAKA,IALA,CAKA,EAAA,CAAA,UAAA,CAAA,KAAA,EAAA,CALA,CAAA;AAOA,WAAA,KAAA,GAAA,KAAA,SAAA,CACA,MADA,CACA,GADA,EAEA,IAFA,CAEA,IAFA,EAEA,OAFA,EAGA,IAHA,CAGA,OAHA,EAGA,MAHA,EAIA,IAJA,CAIA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAJA,EAKA,MALA,CAKA,MALA,EAMA,IANA,CAMA,GANA,EAMA,CANA,EAOA,IAPA,CAOA,GAPA,EAOA,KAAA,CAAA,CAAA,KAAA,CAAA,CAAA,KAAA,GAAA,GAAA,EAAA,IAAA,GAPA,EAQA,IARA,CAQA,IARA,EAQA,QARA,EASA,IATA,CASA,MATA,EASA,MATA,EAUA,IAVA,CAUA,aAVA,EAUA,MAVA,EAWA,IAXA,CAWA,aAXA,EAWA,OAXA,EAYA,IAZA,CAYA,GAZA,CAAA;AAcA,UAAA,EAAA,GAAA,KAAA,EAAA;AACA,UAAA,EAAA,GAAA,KAAA,EAAA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA;AACA,UAAA,CAAA,GAAA,KAAA,CAAA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA;AACA,UAAA,SAAA,GAAA,KAAA,SAAA;AACA,UAAA,QAAA,GAAA,KAAA,QAAA;AACA,UAAA,MAAA,GAAA,KAAA,MAAA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA;AAEA,UAAA,SAAA,GAAA,EAAA,CACA,IADA,GAEA,CAFA,CAEA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,eAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,SAAA,KAAA,CAAA;AACA,OAJA,EAKA,CALA,CAKA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAPA,CAAA;AASA,WAAA,MAAA,GAAA,KAAA,SAAA,CACA,SADA,CACA,aADA,EAEA,IAFA,CAEA,MAFA,EAGA,KAHA,GAIA,MAJA,CAIA,GAJA,EAKA,IALA,CAKA,MALA,EAKA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,CAAA,CAAA;AACA,OAPA,EAQA,IARA,CAQA,OARA,EAQA,UAAA,CAAA,EAAA;AACA,eAAA,gBAAA,CAAA;AACA,OAVA,CAAA;AAYA,WAAA,KAAA,GAAA,KAAA,MAAA,CACA,MADA,CACA,MADA,EAEA,IAFA,CAEA,QAFA,EAEA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,CAAA,CAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,YAAA,GAAA,GAAA,EAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;;AACA,eAAA,GAAA;AACA,OAXA,EAYA,IAZA,CAYA,OAZA,EAYA,aAZA,EAaA,IAbA,CAaA,GAbA,EAaA,SAbA,EAcA,IAdA,CAcA,MAdA,EAcA,MAdA,CAAA;AAgBA,WAAA,MAAA,GAAA,KAAA,MAAA,CACA,SADA,CACA,MADA,EAEA,IAFA,CAEA,UAAA,CAAA,EAAA;AACA,YAAA,GAAA,GAAA,EAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;;AACA,eAAA,GAAA;AACA,OARA,EASA,KATA,GAUA,MAVA,CAUA,QAVA,EAUA;AAVA,OAWA,IAXA,CAWA,OAXA,EAWA,KAXA,EAWA;AAXA,OAYA,IAZA,CAYA,IAZA,EAYA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,eAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,SAAA,KAAA,CAAA;AACA,OAdA,EAeA,IAfA,CAeA,IAfA,EAeA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,CAAA,CAAA;AACA,OAjBA,EAkBA,IAlBA,CAkBA,GAlBA,EAkBA,CAlBA,CAAA;AAmBA,KA7IA;AA8IA,IAAA,MA9IA,oBA8IA,CAAA,CA9IA;AA+IA,IAAA,YA/IA,wBA+IA,MA/IA,EA+IA;AACA,UAAA,GAAA,GAAA,EAAA;;AAEA,WAAA,IAAA,CAAA,IAAA,KAAA,EAAA;AACA,aAAA,IAAA,CAAA,IAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AACA;AACA;AACA;;AACA,aAAA,GAAA;AACA,KA1JA;AA2JA,IAAA,OA3JA,mBA2JA,MA3JA,EA2JA,MA3JA,EA2JA;AACA,UAAA,GAAA,GAAA,CAAA;;AAEA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,GAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AAEA,cAAA,UAAA,CAAA,GAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,GAAA,CAAA,EACA,GAAA,GAAA,GAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA;;AAEA,aAAA,GAAA;AACA;AAxKA;AAjDA,CAAA","sourcesContent":["<template>\n    <div>\n        <h1>Multi Line Chart</h1>\n        <svg class=\"linechart\" :id=\"id\"></svg>\n        Noch buggy, warte bis wir den richtigen Datensatz haben\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport { scaleLinear, scaleBand } from \"d3-scale\";\nimport { max, min } from \"d3-array\";\nimport { selectAll } from \"d3-selection\";\n\nexport default {\n    name: \"Test-Chart\",\n    props: {\n        data: Object\n    },\n    data() {\n        return {\n            testdata: {\n                PLA: {\n                    A: 1,\n                    B: 2\n                },\n                PBS: {\n                    A: 1,\n                    B: 4\n                }\n            },\n            id: 9000,\n            height: 600,\n            heightSVG: 0,\n            widthSVG: 0,\n            width: 600,\n            margin: { top: 30, right: 30, bottom: 30, left: 70 },\n            margin_top: 20,\n            margin_left: 50,\n            keysX0: [],\n            keysX1: [],\n            values: [],\n            maxX1: 0,\n            x0: Object,\n            x1: Object,\n            y: Object,\n            color: Object,\n            svg: Object,\n            container: Object,\n            xAxis: Object,\n            yAxis: Object,\n            groups: Object,\n            lines: Object,\n            points: Object\n        };\n    },\n    computed: {},\n    mounted() {\n        this.init();\n        this.draw();\n    },\n    created() {\n    },\n    methods: {\n        init() {\n            this.svg = d3.select(document.getElementById(this.id));\n            this.svg\n                .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                .attr(\"viewBox\", \"0 0 \" + this.width + \" \" + this.height);\n\n            this.widthSVG = this.width - this.margin.left - this.margin.right;\n            this.heightSVG = this.height - this.margin.top - this.margin.bottom;\n\n            this.keysX0 = Object.keys(this.testdata);\n            this.values = Object.values(this.testdata);\n            this.keysX1 = Object.keys(this.values[0]);\n\n            this.color = d3.scaleOrdinal(d3.schemeCategory10);\n\n            this.maxX1 = this.findMax(this.values, this.keysX1);\n\n            this.x0 = d3\n                .scaleBand()\n                .range([0, this.widthSVG])\n                .padding(0.1);\n            this.x0.domain(this.keysX1);\n\n            this.y = d3\n                .scaleLinear()\n                .domain([0, this.maxX1])\n                .nice()\n                .rangeRound([this.heightSVG, 0]);\n\n            this.generator = d3\n                .line()\n                .x(function(d, i) {\n                    return x0(this.keysX0[i]) + x0.bandwidth() / 2;\n                })\n                .y(function(d) {\n                    return y(d);\n                });\n        },\n        draw() {\n            this.container = this.svg\n                .append(\"g\")\n                .attr(\"class\", \"svgcontainer\")\n                .attr(\"id\", \"containerid\")\n                .attr(\n                    \"transform\",\n                    \"translate(\" +\n                        this.margin.left +\n                        \",\" +\n                        this.margin.top +\n                        \")\"\n                );\n\n            this.xAxis = this.container\n                .append(\"g\")\n                .attr(\"class\", \"axis\")\n                .attr(\"id\", \"xAxis\")\n                .attr(\"transform\", \"translate(0,\" + this.heightSVG + \")\")\n                .call(d3.axisBottom(this.x0));\n\n            this.yAxis = this.container\n                .append(\"g\")\n                .attr(\"id\", \"yAxis\")\n                .attr(\"class\", \"axis\")\n                .call(d3.axisLeft(this.y))\n                .append(\"text\")\n                .attr(\"x\", 2)\n                .attr(\"y\", this.y(this.y.ticks().pop()) + 0.5)\n                .attr(\"dy\", \"0.32em\")\n                .attr(\"fill\", \"#000\")\n                .attr(\"font-weight\", \"bold\")\n                .attr(\"text-anchor\", \"start\")\n                .text(\"k\");\n\n            let x0 = this.x0;\n            let x1 = this.x1;\n            let values = this.values;\n            let y = this.y;\n            let keysX0 = this.keysX0;\n            let keysX1 = this.keysX1;\n            let heightSVG = this.heightSVG;\n            let widthSVG = this.widthSVG;\n            let margin = this.margin;\n            let color = this.color;\n\n            let generator = d3\n                .line()\n                .x(function(d, i) {\n                    return x0(keysX1[i]) + x0.bandwidth() / 2;\n                })\n                .y(function(d) {\n                    return y(d);\n                });\n\n            this.groups = this.container\n                .selectAll(\".line-group\")\n                .data(keysX1)\n                .enter()\n                .append(\"g\")\n                .attr(\"fill\", function(d, i) {\n                    return color(i);\n                })\n                .attr(\"class\", function(d) {\n                    return \"line-group \" + d;\n                });\n\n            this.lines = this.groups\n                .append(\"path\")\n                .attr(\"stroke\", function(d, i) {\n                    return color(i);\n                })\n                .datum(function(d) {\n                    let dat = [];\n                    for (let k = 0; k < keysX0.length; k++) {\n                        dat.push(values[k][d]);\n                    }\n                    return dat;\n                })\n                .attr(\"class\", \"line Global\")\n                .attr(\"d\", generator)\n                .attr(\"fill\", \"none\");\n\n            this.points = this.groups\n                .selectAll(\".dot\")\n                .data(function(d) {\n                    let dat = [];\n                    for (let k = 0; k < keysX1.length; k++) {\n                        dat.push(values[k][d]);\n                    }\n                    return dat;\n                })\n                .enter()\n                .append(\"circle\") // Uses the enter().append() method\n                .attr(\"class\", \"dot\") // Assign a class for styling\n                .attr(\"cx\", function(d, i) {\n                    return x0(keysX1[i]) + x0.bandwidth() / 2;\n                })\n                .attr(\"cy\", function(d) {\n                    return y(d);\n                })\n                .attr(\"r\", 3);\n        },\n        update() {},\n        createX1Keys(values) {\n            let arr = [];\n\n            for (let i in value) {\n                for (let j in value[i]) {\n                    if (!arr.includes(j)) {\n                        arr.push(j);\n                    }\n                }\n            }\n            return arr;\n        },\n        findMax(values, keysX1) {\n            let max = 0;\n\n            for (let i = 0; i < values.length; i++) {\n                for (let j = 0; j < keysX1.length; j++) {\n                    let tmp = values[i];\n\n                    if (parseFloat(tmp[keysX1[j]]) > parseFloat(max))\n                        max = tmp[keysX1[j]];\n                }\n            }\n\n            return max;\n        }\n    }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components/diagrams"}]}