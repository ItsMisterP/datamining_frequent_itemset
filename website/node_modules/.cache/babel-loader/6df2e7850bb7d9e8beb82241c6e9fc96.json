{"remainingRequest":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/babel-loader/lib/index.js!/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/src/components/diagrams/GroupedBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/src/components/diagrams/GroupedBarChart.vue","mtime":1588491720576},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKaW1wb3J0IHsgc2NhbGVMaW5lYXIsIHNjYWxlQmFuZCB9IGZyb20gImQzLXNjYWxlIjsKaW1wb3J0IHsgbWF4LCBtaW4gfSBmcm9tICJkMy1hcnJheSI7CmltcG9ydCB7IHNlbGVjdEFsbCB9IGZyb20gImQzLXNlbGVjdGlvbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGVzdC1DaGFydCIsCiAgcHJvcHM6IHsKICAgIGRhdGE6IE9iamVjdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRlc3RkYXRhOiB7CiAgICAgICAgUExBOiB7CiAgICAgICAgICBBOiAxLAogICAgICAgICAgQjogMgogICAgICAgIH0sCiAgICAgICAgUEJTOiB7CiAgICAgICAgICBBOiAxLAogICAgICAgICAgQjogNAogICAgICAgIH0KICAgICAgfSwKICAgICAgaWQ6IDgwMDAsCiAgICAgIGhlaWdodDogNjAwLAogICAgICBoZWlnaHRTVkc6IDAsCiAgICAgIHdpZHRoU1ZHOiAwLAogICAgICB3aWR0aDogNjAwLAogICAgICBtYXJnaW46IHsKICAgICAgICB0b3A6IDMwLAogICAgICAgIHJpZ2h0OiAzMCwKICAgICAgICBib3R0b206IDMwLAogICAgICAgIGxlZnQ6IDcwCiAgICAgIH0sCiAgICAgIG1hcmdpbl90b3A6IDIwLAogICAgICBtYXJnaW5fbGVmdDogNTAsCiAgICAgIGtleXNYMDogW10sCiAgICAgIGtleXNYMTogW10sCiAgICAgIHZhbHVlczogW10sCiAgICAgIG1heFgxOiAwLAogICAgICB4MDogT2JqZWN0LAogICAgICB4MTogT2JqZWN0LAogICAgICB5OiBPYmplY3QsCiAgICAgIGNvbG9yOiBPYmplY3QsCiAgICAgIHN2ZzogT2JqZWN0LAogICAgICBjb250YWluZXI6IE9iamVjdCwKICAgICAgeEF4aXM6IE9iamVjdCwKICAgICAgeUF4aXM6IE9iamVjdCwKICAgICAgZ3JvdXBzOiBPYmplY3QsCiAgICAgIGJhcnM6IE9iamVjdAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KCk7CiAgICB0aGlzLmRyYXcoKTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICBjb25zb2xlLmxvZygibGluZSBjaGFydCBjcmVhdGVkIik7CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgICB0aGlzLnN2ZyA9IGQzLnNlbGVjdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLmlkKSk7CiAgICAgIHRoaXMuc3ZnLmF0dHIoInByZXNlcnZlQXNwZWN0UmF0aW8iLCAieE1pbllNaW4gbWVldCIpLmF0dHIoInZpZXdCb3giLCAiMCAwICIgKyB0aGlzLndpZHRoICsgIiAiICsgdGhpcy5oZWlnaHQpOwogICAgICB0aGlzLndpZHRoU1ZHID0gdGhpcy53aWR0aCAtIHRoaXMubWFyZ2luLmxlZnQgLSB0aGlzLm1hcmdpbi5yaWdodDsKICAgICAgdGhpcy5oZWlnaHRTVkcgPSB0aGlzLmhlaWdodCAtIHRoaXMubWFyZ2luLnRvcCAtIHRoaXMubWFyZ2luLmJvdHRvbTsKICAgICAgdGhpcy5rZXlzWDAgPSBPYmplY3Qua2V5cyh0aGlzLnRlc3RkYXRhKTsKICAgICAgdGhpcy52YWx1ZXMgPSBPYmplY3QudmFsdWVzKHRoaXMudGVzdGRhdGEpOwogICAgICB0aGlzLmtleXNYMSA9IE9iamVjdC5rZXlzKHRoaXMudmFsdWVzWzBdKTsKICAgICAgdGhpcy5jb2xvciA9IGQzLnNjYWxlT3JkaW5hbChkMy5zY2hlbWVDYXRlZ29yeTEwKTsKICAgICAgdGhpcy5tYXhYMSA9IHRoaXMuZmluZE1heCh0aGlzLnZhbHVlcywgdGhpcy5rZXlzWDEpOwogICAgICB0aGlzLngwID0gZDMuc2NhbGVCYW5kKCkucmFuZ2UoWzAsIHRoaXMud2lkdGhTVkddKS5wYWRkaW5nKDAuMSk7CiAgICAgIHRoaXMueDAuZG9tYWluKHRoaXMua2V5c1gwKTsKICAgICAgdGhpcy54MSA9IGQzLnNjYWxlQmFuZCgpLnJhbmdlUm91bmQoWzAsIHRoaXMueDAuYmFuZHdpZHRoKCldKS5wYWRkaW5nKDAuMDUpOwogICAgICB0aGlzLngxLmRvbWFpbih0aGlzLmtleXNYMSk7CiAgICAgIHRoaXMueSA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKFswLCB0aGlzLm1heFgxXSkubmljZSgpLnJhbmdlUm91bmQoW3RoaXMuaGVpZ2h0U1ZHLCAwXSk7CiAgICB9LAogICAgZHJhdzogZnVuY3Rpb24gZHJhdygpIHsKICAgICAgdGhpcy5jb250YWluZXIgPSB0aGlzLnN2Zy5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsICJzdmdjb250YWluZXIiKS5hdHRyKCJpZCIsICJjb250YWluZXJpZCIpLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoIiArIHRoaXMubWFyZ2luLmxlZnQgKyAiLCIgKyB0aGlzLm1hcmdpbi50b3AgKyAiKSIpOwogICAgICB0aGlzLnhBeGlzID0gdGhpcy5jb250YWluZXIuYXBwZW5kKCJnIikuYXR0cigiY2xhc3MiLCAiYXhpcyIpLmF0dHIoImlkIiwgInhBeGlzIikuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgwLCIgKyB0aGlzLmhlaWdodFNWRyArICIpIikuY2FsbChkMy5heGlzQm90dG9tKHRoaXMueDApKTsKICAgICAgdGhpcy55QXhpcyA9IHRoaXMuY29udGFpbmVyLmFwcGVuZCgiZyIpLmF0dHIoImlkIiwgInlBeGlzIikuYXR0cigiY2xhc3MiLCAiYXhpcyIpLmNhbGwoZDMuYXhpc0xlZnQodGhpcy55KSkuYXBwZW5kKCJ0ZXh0IikuYXR0cigieCIsIDIpLmF0dHIoInkiLCB0aGlzLnkodGhpcy55LnRpY2tzKCkucG9wKCkpICsgMC41KS5hdHRyKCJkeSIsICIwLjMyZW0iKS5hdHRyKCJmaWxsIiwgIiMwMDAiKS5hdHRyKCJmb250LXdlaWdodCIsICJib2xkIikuYXR0cigidGV4dC1hbmNob3IiLCAic3RhcnQiKS50ZXh0KCJrIik7CiAgICAgIHZhciB4MCA9IHRoaXMueDA7CiAgICAgIHZhciB4MSA9IHRoaXMueDE7CiAgICAgIHZhciB2YWx1ZXMgPSB0aGlzLnZhbHVlczsKICAgICAgdmFyIHkgPSB0aGlzLnk7CiAgICAgIHZhciBrZXlzWDAgPSB0aGlzLmtleXNYMDsKICAgICAgdmFyIGtleXNYMSA9IHRoaXMua2V5c1gxOwogICAgICB2YXIgaGVpZ2h0U1ZHID0gdGhpcy5oZWlnaHRTVkc7CiAgICAgIHZhciB3aWR0aFNWRyA9IHRoaXMud2lkdGhTVkc7CiAgICAgIHZhciBtYXJnaW4gPSB0aGlzLm1hcmdpbjsKICAgICAgdmFyIGNvbG9yID0gdGhpcy5jb2xvcjsKICAgICAgdGhpcy5ncm91cHMgPSB0aGlzLmNvbnRhaW5lci5zZWxlY3RBbGwoIi5iYXJHcm91cCIpLmRhdGEodGhpcy5rZXlzWDApLmVudGVyKCkuYXBwZW5kKCJnIikuYXR0cigiY2xhc3MiLCAiYmFyR3JvdXAiKS5hdHRyKCJ0cmFuc2Zvcm0iLCBmdW5jdGlvbiAoZCkgewogICAgICAgIGNvbnNvbGUubG9nKGQpOwogICAgICAgIHJldHVybiAidHJhbnNsYXRlKCIgKyB4MChkKSArICIsMCkiOwogICAgICB9KTsKICAgICAgdGhpcy5iYXJzID0gdGhpcy5ncm91cHMuc2VsZWN0QWxsKCJyZWN0IikuZGF0YShmdW5jdGlvbiAoZCwgaSkgewogICAgICAgIHZhciBkYXQgPSB2YWx1ZXNbaV07CiAgICAgICAgdmFyIGFyciA9IFtdOwoKICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwga2V5c1gxLmxlbmd0aDsgX2krKykgewogICAgICAgICAgYXJyLnB1c2goZGF0W2tleXNYMVtfaV1dKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBhcnI7CiAgICAgIH0pLmVudGVyKCkuYXBwZW5kKCJyZWN0IikuYXR0cigiY2xhc3MiLCAiYmFyIikuYXR0cigieCIsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgcmV0dXJuIHgxKGtleXNYMVtpXSk7CiAgICAgIH0pLmF0dHIoIndpZHRoIiwgeDEuYmFuZHdpZHRoKCkpLmF0dHIoInkiLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHkoMCk7CiAgICAgIH0pOwogICAgICB0aGlzLmJhcnMudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApLmF0dHIoInkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiB5KGQpOwogICAgICB9KS5hdHRyKCJ3aWR0aCIsIHgxLmJhbmR3aWR0aCgpKS5hdHRyKCJoZWlnaHQiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBoZWlnaHRTVkcgLSB5KGQpOwogICAgICB9KS5hdHRyKCJmaWxsIiwgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICByZXR1cm4gY29sb3IoaSk7CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sCiAgICBjcmVhdGVYMUtleXM6IGZ1bmN0aW9uIGNyZWF0ZVgxS2V5cyh2YWx1ZXMpIHsKICAgICAgdmFyIGFyciA9IFtdOwoKICAgICAgZm9yICh2YXIgaSBpbiB2YWx1ZSkgewogICAgICAgIGZvciAodmFyIGogaW4gdmFsdWVbaV0pIHsKICAgICAgICAgIGlmICghYXJyLmluY2x1ZGVzKGopKSB7CiAgICAgICAgICAgIGFyci5wdXNoKGopOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGFycjsKICAgIH0sCiAgICBmaW5kTWF4OiBmdW5jdGlvbiBmaW5kTWF4KHZhbHVlcywga2V5c1gxKSB7CiAgICAgIHZhciBtYXggPSAwOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWx1ZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGtleXNYMS5sZW5ndGg7IGorKykgewogICAgICAgICAgdmFyIHRtcCA9IHZhbHVlc1tpXTsKICAgICAgICAgIGlmIChwYXJzZUZsb2F0KHRtcFtrZXlzWDFbal1dKSA+IHBhcnNlRmxvYXQobWF4KSkgbWF4ID0gdG1wW2tleXNYMVtqXV07CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gbWF4OwogICAgfQogIH0KfTs="},{"version":3,"sources":["GroupedBarChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <h1>Grouped Bar Chart</h1>\n        <svg class=\"linechart\" :id=\"id\"></svg>\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport { scaleLinear, scaleBand } from \"d3-scale\";\nimport { max, min } from \"d3-array\";\nimport { selectAll } from \"d3-selection\";\n\nexport default {\n    name: \"Test-Chart\",\n    props: {\n        data: Object\n    },\n    data() {\n        return {\n            testdata: {\n                PLA: {\n                    A: 1,\n                    B: 2\n                },\n                PBS: {\n                    A: 1,\n                    B: 4\n                }\n            },\n            id: 8000,\n            height: 600,\n            heightSVG: 0,\n            widthSVG: 0,\n            width: 600,\n            margin: { top: 30, right: 30, bottom: 30, left: 70 },\n            margin_top: 20,\n            margin_left: 50,\n            keysX0: [],\n            keysX1: [],\n            values: [],\n            maxX1: 0,\n            x0: Object,\n            x1: Object,\n            y: Object,\n            color: Object,\n            svg: Object,\n            container: Object,\n            xAxis: Object,\n            yAxis: Object,\n            groups: Object,\n            bars: Object\n        };\n    },\n    computed: {},\n    mounted() {\n        this.init();\n        this.draw();\n    },\n    created() {\n        console.log(\"line chart created\");\n    },\n    methods: {\n        init() {\n            this.svg = d3.select(document.getElementById(this.id));\n            this.svg\n                .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                .attr(\"viewBox\", \"0 0 \" + this.width + \" \" + this.height);\n\n            this.widthSVG = this.width - this.margin.left - this.margin.right;\n            this.heightSVG = this.height - this.margin.top - this.margin.bottom;\n\n            this.keysX0 = Object.keys(this.testdata);\n            this.values = Object.values(this.testdata);\n            this.keysX1 = Object.keys(this.values[0]);\n\n            this.color = d3.scaleOrdinal(d3.schemeCategory10);\n\n            this.maxX1 = this.findMax(this.values, this.keysX1);\n\n            this.x0 = d3\n                .scaleBand()\n                .range([0, this.widthSVG])\n                .padding(0.1);\n            this.x0.domain(this.keysX0);\n\n            this.x1 = d3\n                .scaleBand()\n                .rangeRound([0, this.x0.bandwidth()])\n                .padding(0.05);\n            this.x1.domain(this.keysX1);\n\n            this.y = d3\n                .scaleLinear()\n                .domain([0, this.maxX1])\n                .nice()\n                .rangeRound([this.heightSVG, 0]);\n        },\n        draw() {\n            this.container = this.svg\n                .append(\"g\")\n                .attr(\"class\", \"svgcontainer\")\n                .attr(\"id\", \"containerid\")\n                .attr(\n                    \"transform\",\n                    \"translate(\" +\n                        this.margin.left +\n                        \",\" +\n                        this.margin.top +\n                        \")\"\n                );\n\n            this.xAxis = this.container\n                .append(\"g\")\n                .attr(\"class\", \"axis\")\n                .attr(\"id\", \"xAxis\")\n                .attr(\"transform\", \"translate(0,\" + this.heightSVG + \")\")\n                .call(d3.axisBottom(this.x0));\n\n            this.yAxis = this.container\n                .append(\"g\")\n                .attr(\"id\", \"yAxis\")\n                .attr(\"class\", \"axis\")\n                .call(d3.axisLeft(this.y))\n                .append(\"text\")\n                .attr(\"x\", 2)\n                .attr(\"y\", this.y(this.y.ticks().pop()) + 0.5)\n                .attr(\"dy\", \"0.32em\")\n                .attr(\"fill\", \"#000\")\n                .attr(\"font-weight\", \"bold\")\n                .attr(\"text-anchor\", \"start\")\n                .text(\"k\");\n\n            let x0 = this.x0;\n            let x1 = this.x1;\n            let values = this.values;\n            let y = this.y;\n            let keysX0 = this.keysX0;\n            let keysX1 = this.keysX1;\n            let heightSVG = this.heightSVG;\n            let widthSVG = this.widthSVG;\n            let margin = this.margin;\n            let color = this.color;\n\n            this.groups = this.container\n                .selectAll(\".barGroup\")\n                .data(this.keysX0)\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"barGroup\")\n                .attr(\"transform\", function(d) {\n                    console.log(d);\n                    return \"translate(\" + x0(d) + \",0)\";\n                });\n\n            this.bars = this.groups\n                .selectAll(\"rect\")\n                .data(function(d, i) {\n                    let dat = values[i];\n                    let arr = [];\n\n                    for (let i = 0; i < keysX1.length; i++) {\n                        arr.push(dat[keysX1[i]]);\n                    }\n\n                    return arr;\n                })\n                .enter()\n                .append(\"rect\")\n                .attr(\"class\", \"bar\")\n                .attr(\"x\", function(d, i) {\n                    return x1(keysX1[i]);\n                })\n                .attr(\"width\", x1.bandwidth())\n                .attr(\"y\", function() {\n                    return y(0);\n                });\n\n            this.bars\n                .transition()\n                .duration(1000)\n                .attr(\"y\", function(d) {\n                    return y(d);\n                })\n                .attr(\"width\", x1.bandwidth())\n                .attr(\"height\", function(d) {\n                    return heightSVG - y(d);\n                })\n                .attr(\"fill\", function(d, i) {\n                    return color(i);\n                });\n        },\n        update() {},\n        createX1Keys(values) {\n            let arr = [];\n\n            for (let i in value) {\n                for (let j in value[i]) {\n                    if (!arr.includes(j)) {\n                        arr.push(j);\n                    }\n                }\n            }\n            return arr;\n        },\n        findMax(values, keysX1) {\n            let max = 0;\n\n            for (let i = 0; i < values.length; i++) {\n                for (let j = 0; j < keysX1.length; j++) {\n                    let tmp = values[i];\n\n                    if (parseFloat(tmp[keysX1[j]]) > parseFloat(max))\n                        max = tmp[keysX1[j]];\n                }\n            }\n\n            return max;\n        }\n    }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components/diagrams"}]}