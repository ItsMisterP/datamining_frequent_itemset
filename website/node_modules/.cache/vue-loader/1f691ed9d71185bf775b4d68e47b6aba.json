{"remainingRequest":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\pages\\Dashboard.vue?vue&type=template&id=1d81e2c0&","dependencies":[{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\pages\\Dashboard.vue","mtime":1586802920000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGVudCIgfSwgWwogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJtZC1sYXlvdXQiIH0sIFsKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICJtZC1sYXlvdXQtaXRlbSBtZC1tZWRpdW0tc2l6ZS0xMDAgbWQteHNtYWxsLXNpemUtMTAwIG1kLXNpemUtNTAiCiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgIm1kLWNhcmQiLAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAibWQtY2FyZC1oZWFkZXIiLAogICAgICAgICAgICAgICAgeyBhdHRyczogeyAiZGF0YS1iYWNrZ3JvdW5kLWNvbG9yIjogImdyYXkiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImg0IiwgeyBzdGF0aWNDbGFzczogInRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJVbnRlcnNjaGllZGxpY2hlIEF0dHJpYnV0ZSIpCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJjYXRlZ29yeSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICJBbGxlIEF0dHJpYnV0ZSwgd2VsY2hlIGbDvHIgZGllIEJlc3RpbW11bmcgZGVyIEZyZXF1ZW50IEl0ZW1zZXRzIGJlbsO2dGlndCB3ZXJkZW4uIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgIm1kLWNhcmQtY29udGVudCIsCiAgICAgICAgICAgICAgICBbX2MoImNoYXJ0IiwgeyBhdHRyczogeyBkYXRhOiBfdm0ubG9hZGVkRGF0YSB9IH0pXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICJtZC1sYXlvdXQtaXRlbSBtZC1tZWRpdW0tc2l6ZS0xMDAgbWQteHNtYWxsLXNpemUtMTAwIG1kLXNpemUtNTAiCiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgIm1kLWNhcmQiLAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAibWQtY2FyZC1oZWFkZXIiLAogICAgICAgICAgICAgICAgeyBhdHRyczogeyAiZGF0YS1iYWNrZ3JvdW5kLWNvbG9yIjogImdyYXkiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImg0IiwgeyBzdGF0aWNDbGFzczogInRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJJdGVtcyB1bmQgaWhyZSByZWxhdGl2ZS9hYnNvbHV0ZSBBbnphaGwiKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAiY2F0ZWdvcnkiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIkdpYnQgZGFzIEF1ZmtvbW1lbiBkZXIgSXRlbXMgYW4uIikKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKCJtZC1jYXJkLWNvbnRlbnQiLCBbX2MoImNvbHVtbiIpXSwgMSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7CiAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgIm1kLWxheW91dC1pdGVtIG1kLW1lZGl1bS1zaXplLTEwMCBtZC14c21hbGwtc2l6ZS0xMDAgbWQtc2l6ZS01MCIKICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAibWQtY2FyZCIsCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJtZC1jYXJkLWhlYWRlciIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7ICJkYXRhLWJhY2tncm91bmQtY29sb3IiOiAiZ3JheSIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiaDQiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIlVudGVyc2NoaWVkbGljaGUgQXR0cmlidXRlIikKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImNhdGVnb3J5IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgIkFsbGUgQXR0cmlidXRlLCB3ZWxjaGUgZsO8ciBkaWUgQmVzdGltbXVuZyBkZXIgRnJlcXVlbnQgSXRlbXNldHMgYmVuw7Z0aWd0IHdlcmRlbi4iCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoIm1kLWNhcmQtY29udGVudCIsIFtfYygibGluZWNoYXJ0IildLCAxKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAibWQtbGF5b3V0LWl0ZW0gbWQtbWVkaXVtLXNpemUtMTAwIG1kLXhzbWFsbC1zaXplLTEwMCBtZC1zaXplLTUwIgogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJtZC1jYXJkIiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgIm1kLWNhcmQtaGVhZGVyIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgImRhdGEtYmFja2dyb3VuZC1jb2xvciI6ICJncmF5IiB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJoNCIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiSXRlbXMgdW5kIGlocmUgcmVsYXRpdmUvYWJzb2x1dGUgQW56YWhsIikKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImNhdGVnb3J5IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJHaWJ0IGRhcyBBdWZrb21tZW4gZGVyIEl0ZW1zIGFuLiIpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygibWQtY2FyZC1jb250ZW50IiwgW19jKCJncm91cGVkYmFyY2hhcnQiKV0sIDEpCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICJtZC1sYXlvdXQtaXRlbSBtZC1tZWRpdW0tc2l6ZS0xMDAgbWQteHNtYWxsLXNpemUtMTAwIG1kLXNpemUtNTAiCiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgIm1kLWNhcmQiLAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAibWQtY2FyZC1oZWFkZXIiLAogICAgICAgICAgICAgICAgeyBhdHRyczogeyAiZGF0YS1iYWNrZ3JvdW5kLWNvbG9yIjogImdyYXkiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImg0IiwgeyBzdGF0aWNDbGFzczogInRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJVbnRlcnNjaGllZGxpY2hlIEF0dHJpYnV0ZSIpCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJjYXRlZ29yeSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICJBbGxlIEF0dHJpYnV0ZSwgd2VsY2hlIGbDvHIgZGllIEJlc3RpbW11bmcgZGVyIEZyZXF1ZW50IEl0ZW1zZXRzIGJlbsO2dGlndCB3ZXJkZW4uIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKCJtZC1jYXJkLWNvbnRlbnQiLCBbX2MoIm11bHRpbGluZWNoYXJ0IildLCAxKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAibWQtbGF5b3V0LWl0ZW0gbWQtbWVkaXVtLXNpemUtMTAwIG1kLXhzbWFsbC1zaXplLTEwMCBtZC1zaXplLTUwIgogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJtZC1jYXJkIiwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgIm1kLWNhcmQtaGVhZGVyIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgImRhdGEtYmFja2dyb3VuZC1jb2xvciI6ICJncmF5IiB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJoNCIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigiSXRlbXMgdW5kIGlocmUgcmVsYXRpdmUvYWJzb2x1dGUgQW56YWhsIikKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImNhdGVnb3J5IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJHaWJ0IGRhcyBBdWZrb21tZW4gZGVyIEl0ZW1zIGFuLiIpCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygibWQtY2FyZC1jb250ZW50IiwgW19jKCJwaWVjaGFydCIpXSwgMSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApCiAgICBdKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}