{"remainingRequest":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/src/components/diagrams/MultiLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/src/components/diagrams/MultiLineChart.vue","mtime":1588499118168},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Studium/Angewandte_Informatik/Master/2te_Semester/Seminar/datamining_frequent_itemset/datamining_frequent_itemset/website/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MultiLineChart.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MultiLineChart.vue","sourceRoot":"src/components/diagrams","sourcesContent":["<template>\n    <div>\n        <h1>Multi Line Chart</h1>\n        <svg class=\"linechart\" :id=\"id\"></svg>\n        Noch buggy, warte bis wir den richtigen Datensatz haben\n    </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport { scaleLinear, scaleBand } from \"d3-scale\";\nimport { max, min } from \"d3-array\";\nimport { selectAll } from \"d3-selection\";\n\nexport default {\n    name: \"Test-Chart\",\n    props: {\n        data: Object\n    },\n    data() {\n        return {\n            testdata: {\n                PLA: {\n                    A: 1,\n                    B: 2\n                },\n                PBS: {\n                    A: 1,\n                    B: 4\n                }\n            },\n            id: 9000,\n            height: 600,\n            heightSVG: 0,\n            widthSVG: 0,\n            width: 600,\n            margin: { top: 30, right: 30, bottom: 30, left: 70 },\n            margin_top: 20,\n            margin_left: 50,\n            keysX0: [],\n            keysX1: [],\n            values: [],\n            maxX1: 0,\n            x0: Object,\n            x1: Object,\n            y: Object,\n            color: Object,\n            svg: Object,\n            container: Object,\n            xAxis: Object,\n            yAxis: Object,\n            groups: Object,\n            lines: Object,\n            points: Object\n        };\n    },\n    computed: {},\n    mounted() {\n        this.init();\n        this.draw();\n    },\n    created() {\n    },\n    methods: {\n        init() {\n            this.svg = d3.select(document.getElementById(this.id));\n            this.svg\n                .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                .attr(\"viewBox\", \"0 0 \" + this.width + \" \" + this.height);\n\n            this.widthSVG = this.width - this.margin.left - this.margin.right;\n            this.heightSVG = this.height - this.margin.top - this.margin.bottom;\n\n            this.keysX0 = Object.keys(this.testdata);\n            this.values = Object.values(this.testdata);\n            this.keysX1 = Object.keys(this.values[0]);\n\n            this.color = d3.scaleOrdinal(d3.schemeCategory10);\n\n            this.maxX1 = this.findMax(this.values, this.keysX1);\n\n            this.x0 = d3\n                .scaleBand()\n                .range([0, this.widthSVG])\n                .padding(0.1);\n            this.x0.domain(this.keysX1);\n\n            this.y = d3\n                .scaleLinear()\n                .domain([0, this.maxX1])\n                .nice()\n                .rangeRound([this.heightSVG, 0]);\n\n            this.generator = d3\n                .line()\n                .x(function(d, i) {\n                    return x0(this.keysX0[i]) + x0.bandwidth() / 2;\n                })\n                .y(function(d) {\n                    return y(d);\n                });\n        },\n        draw() {\n            this.container = this.svg\n                .append(\"g\")\n                .attr(\"class\", \"svgcontainer\")\n                .attr(\"id\", \"containerid\")\n                .attr(\n                    \"transform\",\n                    \"translate(\" +\n                        this.margin.left +\n                        \",\" +\n                        this.margin.top +\n                        \")\"\n                );\n\n            this.xAxis = this.container\n                .append(\"g\")\n                .attr(\"class\", \"axis\")\n                .attr(\"id\", \"xAxis\")\n                .attr(\"transform\", \"translate(0,\" + this.heightSVG + \")\")\n                .call(d3.axisBottom(this.x0));\n\n            this.yAxis = this.container\n                .append(\"g\")\n                .attr(\"id\", \"yAxis\")\n                .attr(\"class\", \"axis\")\n                .call(d3.axisLeft(this.y))\n                .append(\"text\")\n                .attr(\"x\", 2)\n                .attr(\"y\", this.y(this.y.ticks().pop()) + 0.5)\n                .attr(\"dy\", \"0.32em\")\n                .attr(\"fill\", \"#000\")\n                .attr(\"font-weight\", \"bold\")\n                .attr(\"text-anchor\", \"start\")\n                .text(\"k\");\n\n            let x0 = this.x0;\n            let x1 = this.x1;\n            let values = this.values;\n            let y = this.y;\n            let keysX0 = this.keysX0;\n            let keysX1 = this.keysX1;\n            let heightSVG = this.heightSVG;\n            let widthSVG = this.widthSVG;\n            let margin = this.margin;\n            let color = this.color;\n\n            let generator = d3\n                .line()\n                .x(function(d, i) {\n                    return x0(keysX1[i]) + x0.bandwidth() / 2;\n                })\n                .y(function(d) {\n                    return y(d);\n                });\n\n            this.groups = this.container\n                .selectAll(\".line-group\")\n                .data(keysX1)\n                .enter()\n                .append(\"g\")\n                .attr(\"fill\", function(d, i) {\n                    return color(i);\n                })\n                .attr(\"class\", function(d) {\n                    return \"line-group \" + d;\n                });\n\n            this.lines = this.groups\n                .append(\"path\")\n                .attr(\"stroke\", function(d, i) {\n                    return color(i);\n                })\n                .datum(function(d) {\n                    let dat = [];\n                    for (let k = 0; k < keysX0.length; k++) {\n                        dat.push(values[k][d]);\n                    }\n                    return dat;\n                })\n                .attr(\"class\", \"line Global\")\n                .attr(\"d\", generator)\n                .attr(\"fill\", \"none\");\n\n            this.points = this.groups\n                .selectAll(\".dot\")\n                .data(function(d) {\n                    let dat = [];\n                    for (let k = 0; k < keysX1.length; k++) {\n                        dat.push(values[k][d]);\n                    }\n                    return dat;\n                })\n                .enter()\n                .append(\"circle\") // Uses the enter().append() method\n                .attr(\"class\", \"dot\") // Assign a class for styling\n                .attr(\"cx\", function(d, i) {\n                    return x0(keysX1[i]) + x0.bandwidth() / 2;\n                })\n                .attr(\"cy\", function(d) {\n                    return y(d);\n                })\n                .attr(\"r\", 3);\n        },\n        update() {},\n        createX1Keys(values) {\n            let arr = [];\n\n            for (let i in value) {\n                for (let j in value[i]) {\n                    if (!arr.includes(j)) {\n                        arr.push(j);\n                    }\n                }\n            }\n            return arr;\n        },\n        findMax(values, keysX1) {\n            let max = 0;\n\n            for (let i = 0; i < values.length; i++) {\n                for (let j = 0; j < keysX1.length; j++) {\n                    let tmp = values[i];\n\n                    if (parseFloat(tmp[keysX1[j]]) > parseFloat(max))\n                        max = tmp[keysX1[j]];\n                }\n            }\n\n            return max;\n        }\n    }\n};\n</script>\n\n<style scoped></style>\n"]}]}