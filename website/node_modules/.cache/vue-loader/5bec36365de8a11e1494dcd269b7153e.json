{"remainingRequest":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\pages\\NetworkGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\pages\\NetworkGraph.vue","mtime":1587708161144},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NetworkGraph.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NetworkGraph.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div>\r\n        <div id=\"graphDiv\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear, scaleBand } from \"d3-scale\";\r\nimport { max, min } from \"d3-array\";\r\nimport { selectAll } from \"d3-selection\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            context: Object,\r\n            width: 500,\r\n            height: 500,\r\n            items: [],\r\n            frame: {\r\n                canvas: Object,\r\n                context: Object,\r\n                width: 0,\r\n                height: 0\r\n            },\r\n            simulation: Object,\r\n            graph: {\r\n                nodes: [],\r\n                links: []\r\n            },\r\n            transform: Object,\r\n            radius: 10\r\n        };\r\n    },\r\n    mounted() {\r\n        this.prepareData();\r\n        this.init();\r\n    },\r\n    methods: {\r\n        prepareData() {\r\n            let rules = require(\"../assets/json/association_rules.json\");\r\n            \r\n\r\n            let filteredRules = rules.filter(item => {\r\n                return item.support > 0.005 && item.kluc > 0.5;\r\n            });\r\n\r\n            console.log(filteredRules.length)\r\n           \r\n            filteredRules.forEach(element => {\r\n                let value = 100.0 * parseFloat(element.support);\r\n \r\n                this.graph.nodes.push({\r\n                    id: \"{\" +element.antecedents.join(\",\") + \"}\",\r\n                    type: \"rule\",\r\n                    col: \"#FF6B66\"\r\n                });\r\n                \r\n                let inputs = element.antecedents;\r\n                inputs.forEach(input => {\r\n                    if (\r\n                        this.graph.nodes.filter(node => (\r\n                            node.id == input\r\n                        )).length == 0\r\n                    ) {\r\n                        this.graph.nodes.push({\r\n                            id: input,\r\n                            col: \"green\"\r\n                        });\r\n                    } \r\n\r\n                    this.graph.links.push({\r\n                        source: input,\r\n                        target: \"{\" +element.antecedents.join(\",\") + \"}\",\r\n                        col: \"blue\"\r\n                    });\r\n                });\r\n                \r\n                let outputs = element.consequents;\r\n                outputs.forEach(output => {\r\n                    if (\r\n                        this.graph.nodes.filter(node => (\r\n                            node.id == output\r\n                        )).length == 0\r\n                    ) {\r\n                        this.graph.nodes.push({\r\n                            id: output,\r\n                            col: \"green\",\r\n                            val: 2\r\n                        });\r\n                    }\r\n\r\n                    this.graph.links.push({\r\n                        source: \"{\" +element.antecedents.join(\",\") + \"}\",\r\n                        target: output,\r\n                        col: \"black\"\r\n                    });\r\n                });\r\n                \r\n            });\r\n            console.log(this.graph.links)\r\n        },\r\n        init() {\r\n            var radius = 5;\r\n\r\n            var defaultNodeCol = \"white\",\r\n                highlightCol = \"yellow\";\r\n\r\n            var height = window.innerHeight;\r\n            var graphWidth = window.innerWidth;\r\n\r\n            var graphCanvas = d3\r\n                .select(\"#graphDiv\")\r\n                .append(\"canvas\")\r\n                .attr(\"width\", graphWidth + \"px\")\r\n                .attr(\"height\", height + \"px\")\r\n                .node();\r\n\r\n            var context = graphCanvas.getContext(\"2d\");\r\n\r\n            var div = d3\r\n                .select(\"body\")\r\n                .append(\"div\")\r\n                .attr(\"class\", \"tooltip\")\r\n                .style(\"opacity\", 0);\r\n\r\n            var simulation = d3\r\n                .forceSimulation()\r\n                .force(\"center\", d3.forceCenter(graphWidth / 2, height / 2))\r\n                .force(\"x\", d3.forceX(graphWidth / 2).strength(0.1))\r\n                .force(\"y\", d3.forceY(height / 2).strength(0.1))\r\n                .force(\"charge\", d3.forceManyBody().strength(-5000))\r\n                .force(\r\n                    \"link\",\r\n                    d3\r\n                        .forceLink()\r\n                        .strength(1)\r\n                        .id(function(d) {\r\n                            return d.id;\r\n                        })\r\n                )\r\n                .alphaTarget(0)\r\n                .alphaDecay(0.05);\r\n\r\n            var transform = d3.zoomIdentity;\r\n\r\n            let data = this.graph;\r\n\r\n            initGraph(data);\r\n\r\n            function initGraph(tempData) {\r\n                function zoomed() {\r\n                    console.log(\"zooming\");\r\n                    transform = d3.event.transform;\r\n                    simulationUpdate();\r\n                }\r\n\r\n                d3.select(graphCanvas)\r\n                    .call(\r\n                        d3\r\n                            .drag()\r\n                            .subject(dragsubject)\r\n                            .on(\"start\", dragstarted)\r\n                            .on(\"drag\", dragged)\r\n                            .on(\"end\", dragended)\r\n                    )\r\n                    .call(\r\n                        d3\r\n                            .zoom()\r\n                            .scaleExtent([1 / 10, 8])\r\n                            .on(\"zoom\", zoomed)\r\n                    );\r\n\r\n                function dragsubject() {\r\n                    var i,\r\n                        x = transform.invertX(d3.event.x),\r\n                        y = transform.invertY(d3.event.y),\r\n                        dx,\r\n                        dy;\r\n                    for (i = tempData.nodes.length - 1; i >= 0; --i) {\r\n                        let node = tempData.nodes[i];\r\n                        dx = x - node.x;\r\n                        dy = y - node.y;\r\n\r\n                        if (dx * dx + dy * dy < radius * radius) {\r\n                            node.x = transform.applyX(node.x);\r\n                            node.y = transform.applyY(node.y);\r\n\r\n                            return node;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function dragstarted() {\r\n                    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n                    d3.event.subject.fx = transform.invertX(d3.event.x);\r\n                    d3.event.subject.fy = transform.invertY(d3.event.y);\r\n                }\r\n\r\n                function dragged() {\r\n                    d3.event.subject.fx = transform.invertX(d3.event.x);\r\n                    d3.event.subject.fy = transform.invertY(d3.event.y);\r\n                }\r\n\r\n                function dragended() {\r\n                    if (!d3.event.active) simulation.alphaTarget(0);\r\n                    d3.event.subject.fx = null;\r\n                    d3.event.subject.fy = null;\r\n                }\r\n\r\n                simulation.nodes(tempData.nodes).on(\"tick\", simulationUpdate);\r\n\r\n                simulation.force(\"link\").links(tempData.links);\r\n\r\n                function render() {}\r\n\r\n                function simulationUpdate() {\r\n                    context.save();\r\n\r\n                    context.clearRect(0, 0, graphWidth, height);\r\n                    context.translate(transform.x, transform.y);\r\n                    context.scale(transform.k, transform.k);\r\n\r\n                    tempData.links.forEach(function(d) {\r\n                        context.beginPath();\r\n                        context.moveTo(d.source.x, d.source.y);\r\n                        context.lineTo(d.target.x, d.target.y);\r\n                        context.strokeStyle = d.col;\r\n                        context.stroke();\r\n                    });\r\n\r\n                    // Draw the nodes\r\n                    tempData.nodes.forEach(function(d, i) {\r\n                        context.beginPath();\r\n                        context.arc(d.x, d.y, radius, 0, 2 * Math.PI, true);\r\n                        context.fillStyle = d.col;\r\n                        context.fill();\r\n                        context.fillText(d.id, d.x+10, d.y+3);\r\n                    });\r\n\r\n                    context.restore();\r\n                    //        transform = d3.zoomIdentity;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style scoped>\r\n.edge {\r\n    stroke: white;\r\n    stroke-width: 1;\r\n}\r\n.graphSVG {\r\n    background-color: black;\r\n}\r\n\r\ndiv.container {\r\n    width: 100%;\r\n    border: 1px solid gray;\r\n}\r\ndiv.tooltip {\r\n    position: absolute;\r\n    text-align: center;\r\n    width: 180px;\r\n    padding: 2px;\r\n    font: 12px sans-serif;\r\n    background: lightsteelblue;\r\n    border: 0px;\r\n    border-radius: 8px;\r\n    pointer-events: none;\r\n}\r\n</style>\r\n"]}]}