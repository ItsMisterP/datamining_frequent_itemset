{"remainingRequest":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\pages\\NetworkGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\pages\\NetworkGraph.vue","mtime":1589293108243},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NetworkGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NetworkGraph.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"md-layout\">\r\n            <div\r\n                class=\"md-layout-item md-medium-size-100 md-xsmall-size-100 md-size-100\"\r\n            >\r\n                <svg id=\"network\"></svg>\r\n            </div>\r\n            <div\r\n                class=\"md-layout-item md-medium-size-100 md-xsmall-size-50 md-size-50\"\r\n            >\r\n                <md-card>\r\n                    <md-card-header data-background-color=\"gray\">\r\n                        <h4 class=\"title\">Filter</h4>\r\n                    </md-card-header>\r\n                    <md-card-content>\r\n                        <label for=\"networkminsup\">Min-Sup for Rules:</label\r\n                        ><br />\r\n                        <input\r\n                            id=\"networkminsup\"\r\n                            @change=\"update\"\r\n                            type=\"range\"\r\n                            v-model.number=\"minsup\"\r\n                            min=\"0.00001\"\r\n                            max=\"0.3\"\r\n                            step=\"0.00001\"\r\n                        />\r\n                        {{ minsup }}\r\n                        <br />\r\n                        <label for=\"klucmin\">Minimum Kluc for Rules:</label\r\n                        ><br />\r\n                        <input\r\n                            id=\"klucmin\"\r\n                            @change=\"update\"\r\n                            type=\"range\"\r\n                            v-model.number=\"klucMin\"\r\n                            min=\"0.0\"\r\n                            max=\"1\"\r\n                            step=\"0.01\"\r\n                        />\r\n                        {{ klucMin }}\r\n                        <br />\r\n                        <label for=\"klucmax\">Maximum Kluc for Rules:</label\r\n                        ><br />\r\n                        <input\r\n                            id=\"klucmax\"\r\n                            @change=\"update\"\r\n                            type=\"range\"\r\n                            v-model.number=\"klucMax\"\r\n                            min=\"0.0\"\r\n                            max=\"1\"\r\n                            step=\"0.01\"\r\n                        />\r\n                        {{ klucMax }}\r\n                        <br />\r\n                        <label for=\"imbratio\">Imb-Ratio for Rules:</label>\r\n                        <br />\r\n                        <input\r\n                            id=\"imbratio\"\r\n                            @change=\"update\"\r\n                            type=\"range\"\r\n                            v-model.number=\"imb\"\r\n                            min=\"0\"\r\n                            max=\"1\"\r\n                            step=\"0.01\"\r\n                        />\r\n                        {{ imb }}\r\n                        <br />\r\n                        <label for=\"networkminsup\">Gravity for Rules:</label\r\n                        ><br />\r\n                        <input\r\n                            id=\"networkminsup\"\r\n                            @change=\"update\"\r\n                            type=\"range\"\r\n                            v-model.number=\"gravity\"\r\n                            min=\"-50000\"\r\n                            max=\"0\"\r\n                            step=\"1000\"\r\n                        />\r\n                        {{ gravity }}\r\n                        <br />\r\n                        <md-checkbox :change=\"update\" v-model=\"showItemsets\"\r\n                            >Show Itemsets</md-checkbox\r\n                        >\r\n                    </md-card-content>\r\n                </md-card>\r\n            </div>\r\n            <div\r\n                class=\"md-layout-item md-medium-size-100 md-xsmall-size-50 md-size-50\"\r\n            >\r\n                <md-card>\r\n                    <md-card-header data-background-color=\"gray\">\r\n                        <h4 class=\"title\">Association Rules</h4>\r\n                    </md-card-header>\r\n                    <md-card-content>\r\n                        <md-table\r\n                            v-model=\"tableRules\"\r\n                            md-sort=\"support\"\r\n                            md-sort-order=\"desc\"\r\n                            md-card\r\n                            md-fixed-header\r\n                        >\r\n                            <md-table-empty-state\r\n                                md-label=\"No Rules found\"\r\n                                :md-description=\"`No rules for the parameters`\"\r\n                            >\r\n                            </md-table-empty-state>\r\n\r\n                            <md-table-row\r\n                                slot=\"md-table-row\"\r\n                                slot-scope=\"{ item }\"\r\n                            >\r\n                                <md-table-cell\r\n                                    md-label=\"Support\"\r\n                                    md-sort-by=\"support\"\r\n                                    md-numeric\r\n                                >\r\n                                    {{ item.support }}\r\n                                </md-table-cell>\r\n                                <md-table-cell\r\n                                    md-label=\"Antecedents\"\r\n                                    md-sort-by=\"antecedents\"\r\n                                >\r\n                                    {{ item.antecedents }}\r\n                                </md-table-cell>\r\n                                <md-table-cell\r\n                                    md-label=\"Consequents\"\r\n                                    md-sort-by=\"consequents\"\r\n                                >\r\n                                    {{ item.consequents }}\r\n                                </md-table-cell>\r\n                                <md-table-cell\r\n                                    md-label=\"Confidence\"\r\n                                    md-sort-by=\"confidence\"\r\n                                >\r\n                                    {{ item.confidence }}\r\n                                </md-table-cell>\r\n                                <md-table-cell\r\n                                    md-label=\"Kluc\"\r\n                                    md-sort-by=\"kluc\"\r\n                                >\r\n                                    {{ item.kluc }}\r\n                                </md-table-cell>\r\n                                <md-table-cell\r\n                                    md-label=\"Imbalance Ratio\"\r\n                                    md-sort-by=\"imbratio\"\r\n                                >\r\n                                    {{ item.imbratio }}\r\n                                </md-table-cell>\r\n                            </md-table-row>\r\n                        </md-table>\r\n                    </md-card-content>\r\n                </md-card>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear, scaleBand } from \"d3-scale\";\r\nimport { max, min } from \"d3-array\";\r\nimport { selectAll } from \"d3-selection\";\r\nimport { globalStore } from \"../main\";\r\n\r\nexport default {\r\n    watch: {\r\n        showItemsets: function() {\r\n            this.update();\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            graph: {\r\n                nodes: [],\r\n                links: []\r\n            },\r\n            radius: 10,\r\n            minsup: 0.00001,\r\n            klucMin: 0.0,\r\n            klucMax: 1,\r\n            imb: 0,\r\n            gravity: -10000,\r\n            showItemsets: false,\r\n            filteredRules: [],\r\n            tableRules: [],\r\n            graphCanvas: Object\r\n        };\r\n    },\r\n    mounted() {\r\n        this.fetchData();\r\n    },\r\n    methods: {\r\n        fetchData() {\r\n            let graph = this;\r\n            d3.json(this.getURL(\"json/association_rules.json\")).then(function(\r\n                data\r\n            ) {\r\n                graph.rules = data;\r\n                graph.prepareData();\r\n                graph.init();\r\n            });\r\n        },\r\n        update() {\r\n            d3.select(\".everything\").remove();\r\n            this.graph.nodes = [];\r\n            this.graph.links = [];\r\n            this.prepareData();\r\n            this.init();\r\n        },\r\n        prepareData() {\r\n            let rules = this.rules;\r\n            this.filteredRules = rules.filter(item => {\r\n                return (\r\n                    item.support > this.minsup &&\r\n                    item.kluc >= this.klucMin &&\r\n                    item.kluc < this.klucMax &&\r\n                    item.imbratio >= this.imb\r\n                );\r\n            });\r\n            this.tableRules = this.filteredRules;\r\n\r\n            if (!this.showItemsets) {\r\n                this.filteredRules.forEach(element => {\r\n                    let value = 1;\r\n\r\n                    this.graph.nodes.push({\r\n                        id:\r\n                            \"{\" +\r\n                            element.antecedents.join(\",\") +\r\n                            \"}->{\" +\r\n                            element.consequents.join(\",\") +\r\n                            \"}\",\r\n                        type: \"rule\",\r\n                        col: \"#FF6B66\",\r\n                        radius: this.radius + value,\r\n                        support: element.support\r\n                    });\r\n\r\n                    let inputs = element.antecedents;\r\n                    inputs.forEach(input => {\r\n                        if (\r\n                            this.graph.nodes.filter(node => node.id == input)\r\n                                .length == 0\r\n                        ) {\r\n                            this.graph.nodes.push({\r\n                                id: input,\r\n                                col: \"green\",\r\n                                radius: this.radius\r\n                            });\r\n                        }\r\n\r\n                        this.graph.links.push({\r\n                            source: input,\r\n                            target:\r\n                                \"{\" +\r\n                                element.antecedents.join(\",\") +\r\n                                \"}->{\" +\r\n                                element.consequents.join(\",\") +\r\n                                \"}\",\r\n                            col: \"blue\"\r\n                        });\r\n                    });\r\n\r\n                    let outputs = element.consequents;\r\n                    outputs.forEach(output => {\r\n                        if (\r\n                            this.graph.nodes.filter(node => node.id == output)\r\n                                .length == 0\r\n                        ) {\r\n                            this.graph.nodes.push({\r\n                                id: output,\r\n                                col: \"green\",\r\n                                val: 2,\r\n                                radius: this.radius\r\n                            });\r\n                        }\r\n\r\n                        this.graph.links.push({\r\n                            source:\r\n                                \"{\" +\r\n                                element.antecedents.join(\",\") +\r\n                                \"}->{\" +\r\n                                element.consequents.join(\",\") +\r\n                                \"}\",\r\n                            target: output,\r\n                            col: \"black\"\r\n                        });\r\n                    });\r\n                });\r\n            } else {\r\n                this.filteredRules.forEach(element => {\r\n                    let value = 1000.0 * parseFloat(element.support);\r\n                    this.graph.nodes.push({\r\n                        id:\r\n                            \"{\" +\r\n                            element.antecedents.join(\",\") +\r\n                            \"}->{\" +\r\n                            element.consequents.join(\",\") +\r\n                            \"}\",\r\n                        type: \"rule\",\r\n                        col: \"#FF6B66\",\r\n                        radius: value\r\n                    });\r\n\r\n                    if (\r\n                        this.graph.nodes.filter(\r\n                            node =>\r\n                                node.id ==\r\n                                \"{\" + element.antecedents.join(\",\") + \"}\"\r\n                        ).length == 0\r\n                    ) {\r\n                        let value2 = 1000.0 * parseFloat(element.as);\r\n                        this.graph.nodes.push({\r\n                            id: \"{\" + element.antecedents.join(\",\") + \"}\",\r\n                            col: \"green\",\r\n                            val: 2,\r\n                            radius: value2\r\n                        });\r\n                    }\r\n                    this.graph.links.push({\r\n                        source: \"{\" + element.antecedents.join(\",\") + \"}\",\r\n                        target:\r\n                            \"{\" +\r\n                            element.antecedents.join(\",\") +\r\n                            \"}->{\" +\r\n                            element.consequents.join(\",\") +\r\n                            \"}\",\r\n                        col: \"blue\"\r\n                    });\r\n\r\n                    if (\r\n                        this.graph.nodes.filter(\r\n                            node =>\r\n                                node.id ==\r\n                                \"{\" + element.consequents.join(\",\") + \"}\"\r\n                        ).length == 0\r\n                    ) {\r\n                        let value3 = 1000.0 * parseFloat(element.as);\r\n                        this.graph.nodes.push({\r\n                            id: \"{\" + element.consequents.join(\",\") + \"}\",\r\n                            col: \"green\",\r\n                            val: 2,\r\n                            radius: value3\r\n                        });\r\n                    }\r\n                    this.graph.links.push({\r\n                        source: \"{\" + element.consequents.join(\",\") + \"}\",\r\n                        target:\r\n                            \"{\" +\r\n                            element.antecedents.join(\",\") +\r\n                            \"}->{\" +\r\n                            element.consequents.join(\",\") +\r\n                            \"}\",\r\n                        col: \"black\"\r\n                    });\r\n                });\r\n            }\r\n        },\r\n        init() {\r\n            let width = window.innerWidth;\r\n            let height = window.innerHeight;\r\n\r\n            var svg = d3\r\n                .select(\"svg\")\r\n                .attr(\"viewBox\", \"0 0 \" + width + \" \" + height);\r\n\r\n            var radius = 15;\r\n\r\n            var simulation = d3.forceSimulation().nodes(this.graph.nodes);\r\n            var link_force = d3.forceLink(this.graph.links).id(function(d) {\r\n                return d.id;\r\n            });\r\n            var charge_force = d3.forceManyBody().strength(this.gravity);\r\n            var center_force = d3.forceCenter(width / 2, height / 2);\r\n\r\n            simulation\r\n                .force(\"charge_force\", charge_force)\r\n                .force(\"center_force\", center_force)\r\n                .force(\"links\", link_force);\r\n\r\n            //add tick instructions:\r\n            simulation.on(\"tick\", tickActions);\r\n\r\n            var g = svg.append(\"g\").attr(\"class\", \"everything\");\r\n\r\n            //svg.on(\"click\", this.containerclicked);\r\n\r\n            //draw lines for the links\r\n            var link = g\r\n                .append(\"g\")\r\n                .attr(\"class\", \"links\")\r\n                .selectAll(\"line\")\r\n                .data(this.graph.links)\r\n                .enter()\r\n                .append(\"line\")\r\n                .attr(\"stroke-width\", 2)\r\n                .style(\"stroke\", function(d) {\r\n                    return d.col;\r\n                });\r\n\r\n            //draw circles for the nodes\r\n            var node = g\r\n                .append(\"g\")\r\n                .attr(\"class\", \"nodes\")\r\n                .selectAll(\"circle\")\r\n                .data(this.graph.nodes)\r\n                .enter()\r\n                .append(\"g\")\r\n                .classed(\"circles\", true);\r\n\r\n            let circles = node\r\n                .append(\"circle\")\r\n                .attr(\"r\", radius)\r\n                .attr(\"fill\", function(d) {\r\n                    return d.col;\r\n                })\r\n                .on(\"click\", this.nodeclicked);\r\n\r\n            node.append(\"text\")\r\n                .attr(\"dx\", radius + 5)\r\n                .attr(\"dy\", \".35em\")\r\n                .attr(\"font-weight\", \"bold\")\r\n                .attr(\"fill\", function(d) {\r\n                    return d.col;\r\n                })\r\n                .text(function(d) {\r\n                    return d.id;\r\n                })\r\n                .style(\"pointer-events\", \"none\");\r\n\r\n            //add drag capabilities\r\n            var drag_handler = d3\r\n                .drag()\r\n                .on(\"start\", drag_start)\r\n                .on(\"drag\", drag_drag)\r\n                .on(\"end\", drag_end);\r\n            drag_handler(node);\r\n\r\n            d3.selectAll(\"circle\")\r\n                .append(\"svg:title\")\r\n                .text(function(d) {\r\n                    return \"Item: \" + d.id + \"\\n\" + \"support: \" + d.support;\r\n                });\r\n\r\n            //add zoom capabilities\r\n            var zoom_handler = d3.zoom().on(\"zoom\", zoom_actions);\r\n            zoom_handler(svg);\r\n\r\n            function tickActions() {\r\n                //update circle positions each tick of the simulation\r\n                node.attr(\"transform\", function(d) {\r\n                    return \"translate(\" + d.x + \",\" + d.y + \")\";\r\n                });\r\n\r\n                //update link positions\r\n                link.attr(\"x1\", function(d) {\r\n                    return d.source.x;\r\n                })\r\n                    .attr(\"y1\", function(d) {\r\n                        return d.source.y;\r\n                    })\r\n                    .attr(\"x2\", function(d) {\r\n                        return d.target.x;\r\n                    })\r\n                    .attr(\"y2\", function(d) {\r\n                        return d.target.y;\r\n                    });\r\n            }\r\n            //Drag functions\r\n            //d is the node\r\n            function drag_start(d) {\r\n                if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n                d.fx = d.x;\r\n                d.fy = d.y;\r\n            }\r\n\r\n            //make sure you can't drag the circle outside the box\r\n            function drag_drag(d) {\r\n                d.fx = d3.event.x;\r\n                d.fy = d3.event.y;\r\n            }\r\n\r\n            function drag_end(d) {\r\n                if (!d3.event.active) simulation.alphaTarget(0);\r\n                d.fx = null;\r\n                d.fy = null;\r\n            }\r\n\r\n            //Zoom functions\r\n            function zoom_actions() {\r\n                g.attr(\"transform\", d3.event.transform);\r\n            }\r\n        },\r\n        getURL: function(url) {\r\n            return globalStore.prefix + url;\r\n        },\r\n        containerclicked(d) {\r\n            console.log(\"tick\");\r\n            this.tableRules = this.filteredRules;\r\n        },\r\n        nodeclicked(d) {\r\n            this.tableRules = this.filteredRules;\r\n\r\n            this.tableRules = this.filteredRules.filter(item => {\r\n                return (\r\n                    item.antecedents.includes(d.id) ||\r\n                    item.consequents.includes(d.id) ||\r\n                    (\r\n                        \"{\" +\r\n                        item.antecedents.join(\",\") +\r\n                        \"}->{\" +\r\n                        item.consequents.join(\",\") +\r\n                        \"}\"\r\n                    ).includes(d.id)\r\n                );\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style scoped>\r\n.edge {\r\n    stroke: white;\r\n    stroke-width: 1;\r\n}\r\n.graphSVG {\r\n    background-color: black;\r\n}\r\n\r\ndiv.container {\r\n    width: 100%;\r\n    border: 1px solid gray;\r\n}\r\ndiv.tooltip {\r\n    position: absolute;\r\n    text-align: center;\r\n    width: 180px;\r\n    padding: 2px;\r\n    font: 12px sans-serif;\r\n    background: lightsteelblue;\r\n    border: 0px;\r\n    border-radius: 8px;\r\n    pointer-events: none;\r\n}\r\ninput {\r\n    width: 50%;\r\n}\r\n</style>\r\n"]}]}