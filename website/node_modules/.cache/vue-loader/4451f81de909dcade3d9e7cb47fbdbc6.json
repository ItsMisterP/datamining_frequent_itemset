{"remainingRequest":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\components\\diagrams\\GroupedBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\components\\diagrams\\GroupedBarChart.vue","mtime":1586800199000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GroupedBarChart.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"GroupedBarChart.vue","sourceRoot":"src/components/diagrams","sourcesContent":["<template>\n    <div>\n        <h1>Grouped Bar Chart</h1>\n        <svg class=\"linechart\"  :id=\"id\">\n        </svg>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { scaleLinear, scaleBand } from \"d3-scale\";\nimport { max, min } from \"d3-array\";\nimport { selectAll } from \"d3-selection\";\n\nexport default {\n    name: \"Test-Chart\",\n    props: {\n        data : Object,\n    },\n    data() {\n        return{\n            testdata:{\n                \"PLA\": {\n                    \"A\":1,\n                    \"B\":2,\n                },\n                \"PBS\": {\n                    \"A\":1,\n                    \"B\":4,\n                }\n            },\n            id: 8000,\n            height: 600,\n            heightSVG: 0,\n            widthSVG: 0,\n            width: 600,\n            margin: {top: 30, right: 30, bottom: 30, left: 70},\n            margin_top : 20,\n            margin_left: 50,\n            keysX0 : [],\n            keysX1 : [],\n            values: [],\n            maxX1 : 0,\n            x0: Object,\n            x1: Object,\n            y: Object,\n            color: Object,\n            svg: Object,\n            container: Object,\n            xAxis: Object,\n            yAxis: Object,\n            groups: Object,\n            bars: Object\n        }\n    },\n    computed: {\n    },\n    mounted(){\n        this.init();\n        this.draw();\n    },\n    created(){\n        console.log(\"line chart created\")\n    },\n    methods: {\n        init(){\n            this.svg = d3.select(document.getElementById(this.id));\n            this.svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                    .attr(\"viewBox\", \"0 0 \" + this.width + \" \" + this.height);\n\n            this.widthSVG = this.width - this.margin.left - this.margin.right;\n            this.heightSVG = this.height - this.margin.top - this.margin.bottom;\n\n            this.keysX0 = Object.keys(this.testdata);\n            this.values = Object.values(this.testdata);\n            this.keysX1 = Object.keys(this.values[0]);\n\n            this.color = d3.scaleOrdinal(d3.schemeCategory10);\n\n            this.maxX1 = this.findMax(this.values, this.keysX1);\n\n\n            this.x0 = d3.scaleBand().range([0, this.widthSVG]).padding(0.1);\n            this.x0.domain(this.keysX0);\n\n            this.x1 = d3.scaleBand().rangeRound([0, this.x0.bandwidth()]).padding(0.05);\n            this.x1.domain(this.keysX1);\n\n            this.y = d3.scaleLinear().domain([0, this.maxX1]).nice().rangeRound([this.heightSVG, 0]);\n        },\n        draw(){\n            this.container = this.svg.append(\"g\")\n                                .attr(\"class\", \"svgcontainer\")\n                                .attr(\"id\", \"containerid\")\n                                .attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n            this.xAxis = this.container.append(\"g\")\n                                    .attr(\"class\", \"axis\")\n                                    .attr(\"id\", \"xAxis\")\n                                    .attr(\"transform\", \"translate(0,\" + this.heightSVG + \")\")\n                                    .call(d3.axisBottom(this.x0));\n\n            this.yAxis = this.container.append(\"g\")\n                                        .attr(\"id\", \"yAxis\")\n                                        .attr(\"class\", \"axis\")\n                                        .call(d3.axisLeft(this.y))\n                                        .append(\"text\")\n                                        .attr(\"x\", 2)\n                                        .attr(\"y\", this.y(this.y.ticks().pop()) + 0.5)\n                                        .attr(\"dy\", \"0.32em\")\n                                        .attr(\"fill\", \"#000\")\n                                        .attr(\"font-weight\", \"bold\")\n                                        .attr(\"text-anchor\", \"start\")\n                                        .text(\"k\");\n\n            let x0 = this.x0;\n            let x1 = this.x1;\n            let values = this.values;\n            let y = this.y;\n            let keysX0 = this.keysX0;\n            let keysX1 = this.keysX1;\n            let heightSVG = this.heightSVG;\n            let widthSVG = this.widthSVG;\n            let margin = this.margin;\n            let color = this.color;\n\n            this.groups = this.container.selectAll(\".barGroup\")\n                                        .data(this.keysX0)\n                                        .enter()\n                                        .append(\"g\")\n                                        .attr(\"class\", \"barGroup\")\n                                        .attr(\"transform\", function (d) {\n                                            console.log(d);\n                                            return \"translate(\" + x0(d) + \",0)\";\n                                        });\n\n            this.bars = this.groups.selectAll(\"rect\")\n                                    .data(function (d, i) {\n                                        let dat = values[i];\n                                        let arr = [];\n\n                                        for (let i = 0; i < keysX1.length; i++) {\n                                            arr.push(dat[keysX1[i]]);\n                                        }\n\n                                        return arr;\n                                    })\n                                    .enter().append(\"rect\")\n                                    .attr(\"class\", \"bar\")\n                                    .attr(\"x\", function (d, i) {\n                                        return x1(keysX1[i])\n                                    })\n                                    .attr(\"width\", x1.bandwidth())\n                                    .attr(\"y\", function () {\n                                        return y(0);\n                                    });\n\n            this.bars.transition().duration(1000)\n                        .attr(\"y\", function(d) { return y(d); })\n                        .attr(\"width\", x1.bandwidth())\n                        .attr(\"height\", function(d) { \n                            return heightSVG - y(d); })\n                        .attr('fill',function(d,i){\n                            return color(i);\n                        });\n        },\n        update(){\n\n        },\n        createX1Keys(values){\n            let arr = [];\n\n            for (let i in value) {\n                for (let j in value[i]) {\n                    if (!arr.includes(j)) {\n                        arr.push(j);\n                    }\n                }\n            }\n            return arr;\n        },\n        findMax(values, keysX1){\n            let max = 0;\n\n            for(let i = 0; i < values.length; i++){\n                for(let j = 0; j < keysX1.length; j++){\n                    let tmp = values[i];\n\n                    if(parseFloat(tmp[keysX1[j]]) > parseFloat(max) )\n                        max = tmp[keysX1[j]];\n                }\n            }\n\n            return max;\n        }\n    }\n}\n</script>\n\n<style scoped>\n</style>"]}]}