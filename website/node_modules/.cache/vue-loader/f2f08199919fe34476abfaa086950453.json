{"remainingRequest":"C:\\Users\\robi\\Desktop\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\robi\\Desktop\\datamining_frequent_itemset\\website\\src\\components\\diagrams\\MultiLineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\robi\\Desktop\\datamining_frequent_itemset\\website\\src\\components\\diagrams\\MultiLineChart.vue","mtime":1589207372979},{"path":"C:\\Users\\robi\\Desktop\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589207629813},{"path":"C:\\Users\\robi\\Desktop\\datamining_frequent_itemset\\website\\node_modules\\babel-loader\\lib\\index.js","mtime":1589207629560},{"path":"C:\\Users\\robi\\Desktop\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589207629813},{"path":"C:\\Users\\robi\\Desktop\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js","mtime":1589207638561}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MultiLineChart.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MultiLineChart.vue","sourceRoot":"src/components/diagrams","sourcesContent":["<template>\r\n    <div>\r\n        <h1>Multi Line Chart</h1>\r\n        <svg class=\"linechart\" :id=\"id\"></svg>\r\n        Noch buggy, warte bis wir den richtigen Datensatz haben\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from \"d3\";\r\nimport { scaleLinear, scaleBand } from \"d3-scale\";\r\nimport { max, min } from \"d3-array\";\r\nimport { selectAll } from \"d3-selection\";\r\n\r\nexport default {\r\n    name: \"Test-Chart\",\r\n    props: {\r\n        data: Object\r\n    },\r\n    data() {\r\n        return {\r\n            testdata: {\r\n                PLA: {\r\n                    A: 1,\r\n                    B: 2\r\n                },\r\n                PBS: {\r\n                    A: 1,\r\n                    B: 4\r\n                }\r\n            },\r\n            id: 9000,\r\n            height: 600,\r\n            heightSVG: 0,\r\n            widthSVG: 0,\r\n            width: 600,\r\n            margin: { top: 30, right: 30, bottom: 30, left: 70 },\r\n            margin_top: 20,\r\n            margin_left: 50,\r\n            keysX0: [],\r\n            keysX1: [],\r\n            values: [],\r\n            maxX1: 0,\r\n            x0: Object,\r\n            x1: Object,\r\n            y: Object,\r\n            color: Object,\r\n            svg: Object,\r\n            container: Object,\r\n            xAxis: Object,\r\n            yAxis: Object,\r\n            groups: Object,\r\n            lines: Object,\r\n            points: Object\r\n        };\r\n    },\r\n    computed: {},\r\n    mounted() {\r\n        this.init();\r\n        this.draw();\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n        init() {\r\n            this.svg = d3.select(document.getElementById(this.id));\r\n            this.svg\r\n                .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n                .attr(\"viewBox\", \"0 0 \" + this.width + \" \" + this.height);\r\n\r\n            this.widthSVG = this.width - this.margin.left - this.margin.right;\r\n            this.heightSVG = this.height - this.margin.top - this.margin.bottom;\r\n\r\n            this.keysX0 = Object.keys(this.testdata);\r\n            this.values = Object.values(this.testdata);\r\n            this.keysX1 = Object.keys(this.values[0]);\r\n\r\n            this.color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n            this.maxX1 = this.findMax(this.values, this.keysX1);\r\n\r\n            this.x0 = d3\r\n                .scaleBand()\r\n                .range([0, this.widthSVG])\r\n                .padding(0.1);\r\n            this.x0.domain(this.keysX1);\r\n\r\n            this.y = d3\r\n                .scaleLinear()\r\n                .domain([0, this.maxX1])\r\n                .nice()\r\n                .rangeRound([this.heightSVG, 0]);\r\n\r\n            this.generator = d3\r\n                .line()\r\n                .x(function(d, i) {\r\n                    return x0(this.keysX0[i]) + x0.bandwidth() / 2;\r\n                })\r\n                .y(function(d) {\r\n                    return y(d);\r\n                });\r\n        },\r\n        draw() {\r\n            this.container = this.svg\r\n                .append(\"g\")\r\n                .attr(\"class\", \"svgcontainer\")\r\n                .attr(\"id\", \"containerid\")\r\n                .attr(\r\n                    \"transform\",\r\n                    \"translate(\" +\r\n                        this.margin.left +\r\n                        \",\" +\r\n                        this.margin.top +\r\n                        \")\"\r\n                );\r\n\r\n            this.xAxis = this.container\r\n                .append(\"g\")\r\n                .attr(\"class\", \"axis\")\r\n                .attr(\"id\", \"xAxis\")\r\n                .attr(\"transform\", \"translate(0,\" + this.heightSVG + \")\")\r\n                .call(d3.axisBottom(this.x0));\r\n\r\n            this.yAxis = this.container\r\n                .append(\"g\")\r\n                .attr(\"id\", \"yAxis\")\r\n                .attr(\"class\", \"axis\")\r\n                .call(d3.axisLeft(this.y))\r\n                .append(\"text\")\r\n                .attr(\"x\", 2)\r\n                .attr(\"y\", this.y(this.y.ticks().pop()) + 0.5)\r\n                .attr(\"dy\", \"0.32em\")\r\n                .attr(\"fill\", \"#000\")\r\n                .attr(\"font-weight\", \"bold\")\r\n                .attr(\"text-anchor\", \"start\")\r\n                .text(\"k\");\r\n\r\n            let x0 = this.x0;\r\n            let x1 = this.x1;\r\n            let values = this.values;\r\n            let y = this.y;\r\n            let keysX0 = this.keysX0;\r\n            let keysX1 = this.keysX1;\r\n            let heightSVG = this.heightSVG;\r\n            let widthSVG = this.widthSVG;\r\n            let margin = this.margin;\r\n            let color = this.color;\r\n\r\n            let generator = d3\r\n                .line()\r\n                .x(function(d, i) {\r\n                    return x0(keysX1[i]) + x0.bandwidth() / 2;\r\n                })\r\n                .y(function(d) {\r\n                    return y(d);\r\n                });\r\n\r\n            this.groups = this.container\r\n                .selectAll(\".line-group\")\r\n                .data(keysX1)\r\n                .enter()\r\n                .append(\"g\")\r\n                .attr(\"fill\", function(d, i) {\r\n                    return color(i);\r\n                })\r\n                .attr(\"class\", function(d) {\r\n                    return \"line-group \" + d;\r\n                });\r\n\r\n            this.lines = this.groups\r\n                .append(\"path\")\r\n                .attr(\"stroke\", function(d, i) {\r\n                    return color(i);\r\n                })\r\n                .datum(function(d) {\r\n                    let dat = [];\r\n                    for (let k = 0; k < keysX0.length; k++) {\r\n                        dat.push(values[k][d]);\r\n                    }\r\n                    return dat;\r\n                })\r\n                .attr(\"class\", \"line Global\")\r\n                .attr(\"d\", generator)\r\n                .attr(\"fill\", \"none\");\r\n\r\n            this.points = this.groups\r\n                .selectAll(\".dot\")\r\n                .data(function(d) {\r\n                    let dat = [];\r\n                    for (let k = 0; k < keysX1.length; k++) {\r\n                        dat.push(values[k][d]);\r\n                    }\r\n                    return dat;\r\n                })\r\n                .enter()\r\n                .append(\"circle\") // Uses the enter().append() method\r\n                .attr(\"class\", \"dot\") // Assign a class for styling\r\n                .attr(\"cx\", function(d, i) {\r\n                    return x0(keysX1[i]) + x0.bandwidth() / 2;\r\n                })\r\n                .attr(\"cy\", function(d) {\r\n                    return y(d);\r\n                })\r\n                .attr(\"r\", 3);\r\n        },\r\n        update() {},\r\n        createX1Keys(values) {\r\n            let arr = [];\r\n\r\n            for (let i in value) {\r\n                for (let j in value[i]) {\r\n                    if (!arr.includes(j)) {\r\n                        arr.push(j);\r\n                    }\r\n                }\r\n            }\r\n            return arr;\r\n        },\r\n        findMax(values, keysX1) {\r\n            let max = 0;\r\n\r\n            for (let i = 0; i < values.length; i++) {\r\n                for (let j = 0; j < keysX1.length; j++) {\r\n                    let tmp = values[i];\r\n\r\n                    if (parseFloat(tmp[keysX1[j]]) > parseFloat(max))\r\n                        max = tmp[keysX1[j]];\r\n                }\r\n            }\r\n\r\n            return max;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n"]}]}