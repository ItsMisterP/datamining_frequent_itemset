{"remainingRequest":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\components\\diagrams\\ColumnChart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\src\\components\\diagrams\\ColumnChart.vue","mtime":1587238459403},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Studium\\Angewandte_Informatik\\Master\\2te_Semester\\Seminar\\datamining_frequent_itemset\\datamining_frequent_itemset\\website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudG9vbHRpcHsKICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuOwogICAgCn0K"},{"version":3,"sources":["ColumnChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;;AAEA","file":"ColumnChart.vue","sourceRoot":"src/components/diagrams","sourcesContent":["<template>\n    <div>\n        <svg :id=\"id\" ></svg>\n    </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport { scaleLinear, scaleBand } from \"d3-scale\";\nimport { max, min } from \"d3-array\";\nimport { selectAll } from \"d3-selection\";\n\nexport default {\n    name: \"Column Chart\",\n    props:{\n        data: Object,\n        id: String\n    },\n    data(){\n        return{\n            testdata: {\n                \"AM\" : 500000,\n                \"PM\" :400000,\n            },\n            height: 600,\n            heightSVG: 0,\n            widthSVG: 0,\n            width: 600,\n            margin: {top: 20, right: 30, bottom: 30, left: 70},\n            margin_top : 10,\n            margin_left: 70,\n            keys : [],\n            values: [],\n            x0: Object,\n            y: Object,\n            color: Object,\n            svg: Object,\n            container: Object,\n            xAxis: Object,\n            yAxis: Object,\n            bars: Object\n        }\n    },\n    mounted(){\n        this.init();\n        this.draw();\n    },\n    methods:{\n        init(){\n            this.testdata = this.data;\n\n            this.svg = d3.select(document.getElementById(this.id));\n            this.svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                    .attr(\"viewBox\", \"0 0 \" + this.width + \" \" + this.height);\n\n            this.widthSVG = this.width - this.margin.left - this.margin.right;\n            this.heightSVG = this.height - this.margin.top - this.margin.bottom;\n\n            this.keys = Object.keys(this.testdata);\n            this.values = Object.values(this.testdata);\n\n            if(this.keys.length >= 30){\n                console.log(\"in\");\n                this.keys = this.keys.slice(0,30);\n                console.log(this.keys);\n                this.values = this.values.slice(0,30);\n            }\n\n            this.x0 = d3.scaleLinear().range([0, this.widthSVG]);\n            this.x0.domain([0, d3.max(this.values)]);\n\n            this.y = d3.scaleBand().range([this.heightSVG, 0]);\n            this.y.domain(this.keys).padding(0.1);\n\n            this.color = d3.scaleOrdinal(d3.schemeCategory10);\n\n            \n        },\n        draw(){\n            var tooltip = d3.select(\"body\")\n                .append(\"div\")\n                .attr(\"class\", \"tooltip\")\n                .style(\"position\", \"absolute\")\n                .style(\"z-index\", \"10\")\n                .style(\"visibility\", \"hidden\")\n                .html(\"<div> </div> <div> </div>\")\n\n            this.container = this.svg.append(\"g\")\n                                    .attr(\"class\", \"svgcontainer\")\n                                    .attr(\"id\", \"c\")\n                                    .attr(\"transform\", \"translate(\" + this.margin_left + \",\" + this.margin_top + \")\");\n\n            this.xAxis = this.container.append(\"g\")\n                            .attr(\"class\", \"axis\")\n                            .attr(\"id\", \"xAxis\")\n                            .attr(\"transform\", \"translate(0,\" + this.heightSVG + \")\")\n                            .call(d3.axisBottom(this.x0));\n\n            this.yAxis = this.container.append(\"g\")\n                                        .attr(\"class\", \"y axis\")\n                                        .call(d3.axisLeft(this.y));\n\n            let color = this.color;\n            let keys = this.keys;\n            let y = this.y;\n            let x = this.x0;\n\n            this.bars = this.container.selectAll(\".bar\")\n                                        .data(this.values)\n                                        .enter().append(\"rect\")\n                                        .attr(\"class\", \"bar\")\n                                        .attr(\"x\", 0)\n                                        .attr(\"height\", this.y.bandwidth())\n                                        .attr(\"fill\", function (d,i) {\n                                            return color(i);\n                                        })\n                                        .attr(\"y\", function(d,i) { return y(keys[i]); })\n                                        .attr(\"width\", function(d) { \n                                            return x(d);\n                                        })\n                                        .on(\"mouseover\", function(d,l){\n                                            console.log(d);\n                                            console.log(l)\n                                            \n                                            return tooltip.style(\"visibility\", \"visible\");\n                                        })\n                                        .on(\"mousemove\", function(){return tooltip.style(\"top\", (event.pageY-10)+\"px\").style(\"left\",(event.pageX+10)+\"px\");})\n                                        .on(\"mouseout\", function(){return tooltip.style(\"visibility\", \"hidden\");});;\n        },\n        update(){\n\n        },\n        scroll(){\n\n        },\n        zoom(){\n            \n        }\n    }\n}\n</script>\n\n<style >\n    .tooltip{\n        background-color: green;\n        \n    }\n</style>"]}]}